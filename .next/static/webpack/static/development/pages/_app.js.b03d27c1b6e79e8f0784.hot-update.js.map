{"version":3,"file":"static/webpack/static/development/pages/_app.js.b03d27c1b6e79e8f0784.hot-update.js","sources":["webpack:///./components/Cart.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\nimport ScrollBar from \"../components/ScrollBar\";\nimport { ShopContext } from \"../contexts/ShopContext\";\n\nconst styles = theme => ({\n    popper: {\n        zIndex: 1300,\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: \"-0.9em\",\n            width: \"3em\",\n            height: \"1em\",\n            \"&::before\": {\n                borderWidth: \"0 1em 1em 1em\",\n                borderColor: `transparent transparent ${theme.palette.common.white} transparent`\n            }\n        }\n    },\n    arrow: {\n        position: \"absolute\",\n        fontSize: 7,\n        width: \"3em\",\n        height: \"3em\",\n        \"&::before\": {\n            content: '\"\"',\n            margin: \"auto\",\n            display: \"block\",\n            width: 0,\n            height: 0,\n            borderStyle: \"solid\"\n        }\n    },\n    closeBtn: {\n        margin: theme.spacing(1),\n        textTransform: \"uppercase\"\n    },\n    cart: {\n        height: \"300px\",\n        width: \"500px\",\n        textAlign: \"center\"\n    },\n    menuItem: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        cursor: \"text\"\n    },\n    link: {\n        display: \"flex\",\n        cursor: \"pointer\"\n    },\n    itemContent: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\"\n    },\n    img: {\n        width: \"30%\",\n        padding: theme.spacing(1)\n    },\n    price: {\n        margin: theme.spacing(1),\n        fontWeight: 500\n    },\n    qty: {\n        margin: theme.spacing(1)\n    },\n    removeBtn: {\n        zIndex: 99\n    },\n    total: {\n        display: \"flex\",\n        padding: theme.spacing(1),\n        alignItems: \"center\",\n        justifyContent: \"space-around\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\",\n        textTransform: \"uppercase\"\n    },\n    checkoutArea: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    checkoutBtn: {\n        backgroundColor: \"PaleVioletRed\",\n        margin: theme.spacing(2)\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst Cart = props => {\n    const classes = useStyles();\n    const [arrowRef, useArrowRef] = useState(null);\n    const { cart, totalItems, totalAmounts, removeFromCart } = useContext(\n        ShopContext\n    );\n\n    const handleArrowRef = node => {\n        useArrowRef(node);\n    };\n\n    return (\n        <Popper\n            className={classes.popper}\n            anchorEl={props.cartAnchorEl}\n            open={props.isCartOpen}\n            placement=\"bottom\"\n            modifiers={{\n                arrow: {\n                    enabled: true,\n                    element: arrowRef\n                }\n            }}\n        >\n            <span className={classes.arrow} ref={handleArrowRef} />\n            <ClickAwayListener onClickAway={props.handleCartClick}>\n                <Paper>\n                    <Button\n                        onClick={props.handleCartClick}\n                        className={classes.closeBtn}\n                    >\n                        Close\n                    </Button>\n                    {cart.length > 0 ? (\n                        <div>\n                            <div className={classes.cart}>\n                                <ScrollBar width=\"500px\" height=\"300px\">\n                                    <MenuList>\n                                        {cart.map((el, i) => (\n                                            <MenuItem\n                                                key={i}\n                                                className={classes.menuItem}\n                                            >\n                                                <Link\n                                                    href={`/shop/[id]`}\n                                                    as={`/shop/${el.id}`}\n                                                    key={i}\n                                                >\n                                                    <div\n                                                        className={classes.link}\n                                                    >\n                                                        <div\n                                                            className={\n                                                                classes.itemContent\n                                                            }\n                                                        >\n                                                            <img\n                                                                className={\n                                                                    classes.img\n                                                                }\n                                                                src={el.imgSrc}\n                                                            />\n                                                            <Typography\n                                                                variant=\"h6\"\n                                                                className={\n                                                                    classes.word\n                                                                }\n                                                            >\n                                                                {el.name}\n                                                            </Typography>\n                                                        </div>\n\n                                                        <div>\n                                                            <Typography\n                                                                variant=\"body1\"\n                                                                className={\n                                                                    classes.price\n                                                                }\n                                                            >\n                                                                $ {el.price}\n                                                            </Typography>\n                                                            <Typography\n                                                                variant=\"subtitle2\"\n                                                                color=\"textSecondary\"\n                                                                className={\n                                                                    classes.qty\n                                                                }\n                                                            >\n                                                                Qty:{\" \"}\n                                                                {el.quantity}\n                                                            </Typography>\n                                                        </div>\n                                                    </div>\n                                                </Link>\n                                                <IconButton\n                                                    className={\n                                                        classes.removeBtn\n                                                    }\n                                                    key=\"close\"\n                                                    aria-label=\"close\"\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        removeFromCart(el.id)\n                                                    }\n                                                >\n                                                    <CloseIcon />\n                                                </IconButton>\n                                            </MenuItem>\n                                        ))}\n                                    </MenuList>\n                                </ScrollBar>\n                            </div>\n                            <div className={classes.total}>\n                                <Typography className={classes.totalWord}>\n                                    Items in cart: {totalItems}\n                                </Typography>\n                                <Typography className={classes.totalWord}>\n                                    Subtotal: $ {totalAmounts}\n                                </Typography>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className={classes.cart}>\n                            <img src={\"/static/images/empty-cart.png\"} />\n                            <Typography>Cart is empty!</Typography>\n                        </div>\n                    )}\n                    <div className={classes.checkoutArea}>\n                        <Link href=\"/checkout\">\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                className={classes.checkoutBtn}\n                                onClick={props.handleCartClick}\n                                disabled={cart.length > 0 ? false : true}\n                            >\n                                Proceed to Checkout\n                            </Button>\n                        </Link>\n                    </div>\n                </Paper>\n            </ClickAwayListener>\n        </Popper>\n    );\n};\n\nexport default Cart;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAFA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AALA;AAcA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAnFA;AAAA;AACA;AAwFA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AALA;AAYA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAFA;AAQA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AADA;AAIA;AADA;AAMA;AAGA;AAJA;AAOA;AACA;AAFA;AAYA;AACA;AAFA;AASA;AACA;AACA;AAHA;AAcA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAxDA;AA0EA;AAAA;AACA;AAAA;AAGA;AAAA;AAMA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAeA;AACA;AACA;;;;A","sourceRoot":""}