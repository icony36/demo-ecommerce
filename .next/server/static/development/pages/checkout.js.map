{"version":3,"file":"static/development/pages/checkout.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/checkout/Billing.js","webpack:///./components/checkout/CardFormat.js","webpack:///./components/checkout/CheckoutCart.js","webpack:///./components/checkout/Confirm.js","webpack:///./components/checkout/Payment.js","webpack:///./contexts/ShopContext.js","webpack:///./hooks/useInputState.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/map.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/dist/client/router.js","webpack:///./node_modules/next/dist/client/with-router.js","webpack:///./node_modules/next/link.js","webpack:///./pages/checkout.js","webpack:///./styles/CheckoutStyles.js","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/Container\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Step\"","webpack:///external \"@material-ui/core/StepLabel\"","webpack:///external \"@material-ui/core/Stepper\"","webpack:///external \"@material-ui/core/Switch\"","webpack:///external \"@material-ui/core/Table\"","webpack:///external \"@material-ui/core/TableBody\"","webpack:///external \"@material-ui/core/TableCell\"","webpack:///external \"@material-ui/core/TableHead\"","webpack:///external \"@material-ui/core/TablePagination\"","webpack:///external \"@material-ui/core/TableRow\"","webpack:///external \"@material-ui/core/TableSortLabel\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Tooltip\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Close\"","webpack:///external \"@material-ui/icons/Delete\"","webpack:///external \"@material-ui/icons/FilterList\"","webpack:///external \"axios\"","webpack:///external \"clsx\"","webpack:///external \"core-js/library/fn/map\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/parse-float\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"next-server/dist/lib/router-context\"","webpack:///external \"next-server/dist/lib/router/rewrite-url-for-export\"","webpack:///external \"next-server/dist/lib/router/router\"","webpack:///external \"next-server/dist/lib/utils\"","webpack:///external \"payment\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"react-country-region-selector\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { CountryRegionData } from \"react-country-region-selector\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(6)\n    },\n    input: {\n        \"& label\": {\n            color: \"PaleVioletRed\"\n        },\n        \"& label.Mui-focused\": {\n            color: \"#C52C57  \"\n        },\n        \"&:hover label\": {\n            color: \"#C52C57 \"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n                borderColor: \"PaleVioletRed \"\n            },\n            \"&:hover fieldset\": {\n                borderColor: \"#C52C57 \"\n            },\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"#C52C57  \"\n            }\n        },\n\n        marginBottom: theme.spacing(4)\n    },\n    num: {\n        \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n            \"-webkit-appearance\": \"none\",\n            \"-moz-appearance\": \"none\",\n            margin: 0\n        },\n        \"&[type=number]\": {\n            \"-webkit-appearance\": \"textfield\",\n            \"-moz-appearance\": \"textfield\"\n        }\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst Billing = props => {\n    const { checkoutInput, setCheckoutInput } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Grid\n                container\n                spacing={4}\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                justify=\"space-evenly\"\n                className={classes.grid}\n            >\n                <Grid\n                    container\n                    item\n                    xs={4}\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"center\"\n                    className={classes.gridItem}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"name\"\n                            id=\"billing-name\"\n                            label=\"Name\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            name=\"companyName\"\n                            id=\"billing-company-name\"\n                            label=\"Company Name\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"address\"\n                            id=\"billing-address\"\n                            label=\"Address\"\n                            multiline\n                            rows=\"6\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            margin=\"dense\"\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    container\n                    item\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"center\"\n                    className={classes.gridItem}\n                    xs={4}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"country\"\n                            id=\"billing-country\"\n                            label=\"Country\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            select\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu\n                                }\n                            }}\n                            value={checkoutInput.country}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        >\n                            {CountryRegionData.map(\n                                ([countryName, countrySlug]) => (\n                                    <MenuItem\n                                        value={countryName}\n                                        key={countrySlug}\n                                    >\n                                        {countryName}\n                                    </MenuItem>\n                                )\n                            )}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"state\"\n                            id=\"billing-state\"\n                            label=\"State/Province\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"city\"\n                            id=\"billing-City\"\n                            label=\"City\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            type=\"number\"\n                            name=\"zipcode\"\n                            id=\"billing-zipcode\"\n                            label=\"Zip/Postal Code\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            inputProps={{\n                                className: classes.num\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    container\n                    item\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"center\"\n                    xs={4}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            type=\"tel\"\n                            name=\"phone\"\n                            id=\"billing-phone\"\n                            label=\"Phone\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            inputProps={{\n                                className: classes.num\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"billing-email\"\n                            label=\"Email\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nexport default Billing;\n","import Payment from \"payment\";\n\nfunction clearNumber(value = \"\") {\n    return value.replace(/\\D+/g, \"\");\n}\n\nexport function formatCreditCardNumber(value) {\n    if (!value) {\n        return value;\n    }\n\n    const issuer = Payment.fns.cardType(value);\n    const clearValue = clearNumber(value);\n    let nextValue;\n\n    switch (issuer) {\n        case \"amex\":\n            nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n                4,\n                10\n            )} ${clearValue.slice(10, 15)}`;\n            break;\n        case \"dinersclub\":\n            nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n                4,\n                10\n            )} ${clearValue.slice(10, 14)}`;\n            break;\n        default:\n            nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n                4,\n                8\n            )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`;\n            break;\n    }\n\n    return nextValue.trim();\n}\n\nexport function formatCVC(value, prevValue, allValues = {}) {\n    const clearValue = clearNumber(value);\n    let maxLength = 4;\n\n    if (allValues.number) {\n        const issuer = Payment.fns.cardType(allValues.number);\n        maxLength = issuer === \"amex\" ? 4 : 3;\n    }\n\n    return clearValue.slice(0, maxLength);\n}\n\nexport function formatExpirationDate(value) {\n    const clearValue = clearNumber(value);\n\n    if (clearValue.length >= 3) {\n        return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\n    }\n\n    return clearValue;\n}\n\nexport function formatFormData(data) {\n    return Object.keys(data).map(d => `${d}: ${data[d]}`);\n}\n","import { useContext, useState } from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Link from \"next/link\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\nimport { Icon } from \"@material-ui/core\";\n\nconst ToolbarStyles = theme => ({\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    },\n    spacer: {\n        flex: \"1 1 100%\"\n    },\n    actions: {\n        color: theme.palette.text.secondary\n    },\n    title: {\n        flex: \"0 0 auto\"\n    }\n});\n\nconst useToolbarStyles = makeStyles(ToolbarStyles);\n\nconst EnhancedToolbar = props => {\n    const classes = useToolbarStyles();\n    const { numSelected, removeAll } = props;\n\n    return (\n        <Toolbar className={classes.toolbar}>\n            <div className={classes.title}>\n                <Typography color=\"inherit\" variant=\"subtitle1\">\n                    {numSelected} {numSelected > 1 ? \"items\" : \"item\"} selected\n                </Typography>\n            </div>\n            <div className={classes.spacer} />\n            {/* <div className={classes.actions}>\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\" onClick={removeAll}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            </div> */}\n        </Toolbar>\n    );\n};\n\nconst styles = theme => ({\n    paper: {\n        marginBottom: theme.spacing(6),\n        overflowX: \"auto\"\n    },\n    item: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    img: {\n        width: \"60%\",\n        verticalAlign: \"center\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        }\n    },\n    name: {\n        marginLeft: theme.spacing(4),\n        cursor: \"pointer\"\n    },\n    numberCell: {\n        width: \"20%\"\n    },\n    total: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        textAlign: \"right\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\"\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\", \"Actions\"];\n\nconst CheckoutCart = props => {\n    const classes = useStyles();\n    const { cart } = useContext(ShopContext);\n\n    const {\n        selected,\n        handleSelectAllClick,\n        handleClick,\n        handleRemove,\n        sumSelectedAmounts\n    } = props;\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            {selected.length > 0 ? (\n                <EnhancedToolbar\n                    numSelected={selected.length}\n                    removeAll={() => handleRemoveBundle(selected)}\n                />\n            ) : (\n                \"\"\n            )}\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell padding=\"checkbox\">\n                            <Checkbox\n                                checked={\n                                    cart.length > 0\n                                        ? selected.length === cart.length\n                                        : false\n                                }\n                                onChange={handleSelectAllClick}\n                            />\n                        </TableCell>\n                        <TableCell>Items</TableCell>\n                        {tableHead.map((el, i) => (\n                            <TableCell key={i} align=\"right\">\n                                {el}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {cart.map((el, i) => (\n                        <TableRow key={i}>\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                    checked={isSelected(el.id)}\n                                    onChange={event =>\n                                        handleClick(event, el.id)\n                                    }\n                                />\n                            </TableCell>\n                            <TableCell\n                                className={classes.itemCell}\n                                component=\"th\"\n                                scope=\"row\"\n                            >\n                                <div className={classes.item}>\n                                    <img\n                                        className={classes.img}\n                                        src={el.imgSrc}\n                                    />\n                                    <Link\n                                        href={`/shop/[id]`}\n                                        as={`/shop/${el.id}`}\n                                    >\n                                        <Typography className={classes.name}>\n                                            {el.name}\n                                        </Typography>\n                                    </Link>\n                                </div>\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                {el.quantity}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price * el.quantity}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.actionCell}\n                            >\n                                <IconButton onClick={handleRemove}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n\n            <div className={classes.total}>\n                <Typography className={classes.totalWord}>\n                    TOTAL ({selected.length}{\" \"}\n                    {selected.length > 1 ? \"items\" : \"item\"}\n                    ): $ {sumSelectedAmounts()}\n                </Typography>\n            </div>\n        </Paper>\n    );\n};\n\nexport default CheckoutCart;\n","import { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(6)\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    },\n    item: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    img: {\n        width: \"40%\",\n        verticalAlign: \"center\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        }\n    },\n    name: {\n        marginLeft: theme.spacing(4),\n        cursor: \"pointer\"\n    },\n    numberCell: {\n        width: \"20%\"\n    },\n    cardArea: {\n        marginTop: theme.spacing(2)\n    },\n    total: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        textAlign: \"right\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\"\n    },\n    subtotal: {\n        color: \"#C52C57\"\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\n\nconst shippingFee = 0;\n\nconst Confirm = props => {\n    const classes = useStyles();\n\n    const {\n        checkoutInput,\n        isPaid,\n        handleReset,\n        selectedItems,\n        sumSelectedAmounts\n    } = props;\n\n    const subTotal = sumSelectedAmounts();\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            {isPaid ? (\n                <Toolbar className={classes.toolbar}>\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\n                        Thank you for your order! Your invoice has been sent to\n                        your email, please check it.\n                    </Typography>\n                </Toolbar>\n            ) : (\n                <Typography variant=\"h5\">Confirm Order</Typography>\n            )}\n\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Items</TableCell>\n                        {tableHead.map((el, i) => (\n                            <TableCell key={i} align=\"right\">\n                                {el}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {selectedItems.map((el, i) => (\n                        <TableRow key={i}>\n                            <TableCell\n                                className={classes.itemCell}\n                                component=\"th\"\n                                scope=\"row\"\n                            >\n                                <div className={classes.item}>\n                                    <img\n                                        className={classes.img}\n                                        src={el.imgSrc}\n                                    />\n\n                                    <Typography className={classes.name}>\n                                        {el.name}\n                                    </Typography>\n                                </div>\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                {el.quantity}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price * el.quantity}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n\n            <div className={classes.cardArea}>\n                <Card className={classes.card} elevation={0}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            ShippingAddress\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.name}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.address}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.zipcode}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.city}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.country}\n                        </Typography>\n                    </CardContent>\n                </Card>\n\n                <Card className={classes.card} elevation={0}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            Payment Info\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Name on card: {checkoutInput.cardName}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Card type: {checkoutInput.cardType}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Card number (last four digit):{\" \"}\n                            {checkoutInput.cardNum.toString().substr(-4)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n\n            <div className={classes.total}>\n                <Typography className={classes.subtotal}>\n                    Subtotal: $ {subTotal}\n                </Typography>\n                <Typography className={classes.subtotal}>\n                    Shipping Fee: $ {shippingFee}\n                </Typography>\n                <Typography className={classes.totalWord}>\n                    {isPaid ? \"TOTAL PAID\" : \"TOTAL\"}: ${\" \"}\n                    {subTotal + shippingFee}\n                </Typography>\n            </div>\n            {isPaid ? <Button onClick={handleReset}>Reset</Button> : null}\n        </Paper>\n    );\n};\n\nexport default Confirm;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(1),\n        marginBottom: theme.spacing(6)\n    },\n    title: {\n        marginBottom: theme.spacing(4)\n    },\n    input: {\n        \"& label\": {\n            color: \"PaleVioletRed\"\n        },\n        \"& label.Mui-focused\": {\n            color: \"#C52C57  \"\n        },\n        \"&:hover label\": {\n            color: \"#C52C57 \"\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n                borderColor: \"PaleVioletRed \"\n            },\n            \"&:hover fieldset\": {\n                borderColor: \"#C52C57 \"\n            },\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"#C52C57  \"\n            }\n        },\n        marginBottom: theme.spacing(4)\n    },\n    num: {\n        \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n            \"-webkit-appearance\": \"none\",\n            \"-moz-appearance\": \"none\",\n            margin: 0\n        },\n        \"&[type=number]\": {\n            \"-webkit-appearance\": \"textfield\",\n            \"-moz-appearance\": \"textfield\"\n        }\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst cardTypes = [\n    {\n        label: \"Visa\"\n    },\n    {\n        label: \"Master\"\n    },\n    {\n        label: \"American Express\"\n    }\n];\n\nconst Payment = props => {\n    const { checkoutInput, setCheckoutInput, handleCardInput } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Typography variant=\"h5\" className={classes.title}>\n                Card Info\n            </Typography>\n            <Grid\n                container\n                spacing={6}\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                justify=\"space-between\"\n                className={classes.grid}\n            >\n                <Grid\n                    container\n                    item\n                    xs={4}\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"center\"\n                    className={classes.gridItem}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"cardType\"\n                            id=\"payment-card-type\"\n                            label=\"Card Type\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            select\n                            SelectProps={{\n                                MenuProps: {\n                                    className: classes.menu\n                                }\n                            }}\n                            value={checkoutInput.cardType}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        >\n                            {cardTypes.map(option => (\n                                <MenuItem\n                                    key={option.label}\n                                    value={option.label}\n                                >\n                                    {option.label}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            name=\"cardName\"\n                            id=\"payment-card-name\"\n                            label=\"Name On Card\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            fullWidth\n                            onChange={setCheckoutInput}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    container\n                    item\n                    xs={4}\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"center\"\n                    className={classes.gridItem}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            type=\"tel\"\n                            name=\"cardNum\"\n                            id=\"payment-card-num\"\n                            label=\"Card Number\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            inputProps={{\n                                className: classes.num\n                            }}\n                            fullWidth\n                            onChange={handleCardInput}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            type=\"tel\"\n                            name=\"cvc\"\n                            id=\"payment-cvc\"\n                            label=\"CVC\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            inputProps={{\n                                className: classes.num\n                            }}\n                            fullWidth\n                            onChange={handleCardInput}\n                        />\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    container\n                    item\n                    xs={4}\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                    justify=\"center\"\n                    className={classes.gridItem}\n                >\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            type=\"tel\"\n                            name=\"expiry\"\n                            id=\"payment-expiry\"\n                            label=\"Valid Thru\"\n                            className={classes.input}\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            inputProps={{\n                                className: classes.num,\n                                pattern: `\\d\\d/\\d\\d`\n                            }}\n                            fullWidth\n                            onChange={handleCardInput}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nexport default Payment;\n","import { createContext, useState } from \"react\";\n\nconst imagesPath = \"/static/images/items/\";\n\nconst initItems = [\n    {\n        id: 1,\n        name: \"Rose Creamchese\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m1.png`,\n        desc: `Macarons with rose creamchese`\n    },\n    {\n        id: 2,\n        name: \"Passion Fruit\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m2.png`,\n        desc: `Macarons with passion fruit`\n    },\n    {\n        id: 3,\n        name: \"Blueberry Creamchese\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m3.png`,\n        desc: `Macarons with blueberry creamchese`\n    },\n    {\n        id: 4,\n        name: \"Matcha\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m4.png`,\n        desc: `Macarons with matcha`\n    },\n    {\n        id: 5,\n        name: \"Lavender\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m5.png`,\n        desc: `Macarons with lavender`\n    },\n    {\n        id: 6,\n        name: \"Peanut Butter\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m6.png`,\n        desc: `Macarons with peanut butter`\n    },\n    {\n        id: 7,\n        name: \"Black Sesame\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m7.png`,\n        desc: `Macarons with black sesame`\n    },\n    {\n        id: 8,\n        name: \"Vanilla\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m8.png`,\n        desc: `Macarons with vanilla`\n    },\n    {\n        id: 9,\n        name: \"Strawberry Creamchese\",\n        price: 1.99,\n        imgSrc: `${imagesPath}m9.png`,\n        desc: `Macarons with strawberry creamchese`\n    }\n];\n\nexport const ShopContext = createContext();\n\nexport const ShopProvider = props => {\n    const [items, setItems] = useState(initItems);\n    const [cart, setCart] = useState([]);\n    const [totalItems, setTotalItems] = useState(0);\n    const [totalAmounts, setTotalAmounts] = useState(0);\n    const [quantity, setQuantity] = useState(1);\n\n    const checkProduct = id => {\n        return cart.some(item => item.id === id);\n    };\n\n    const addToCart = selectedItem => {\n        if (checkProduct(selectedItem.id)) {\n            console.log(\"Found same item in cart!\");\n            let index = cart.findIndex(x => x.id == selectedItem.id);\n            cart[index].quantity =\n                Number(cart[index].quantity) + Number(selectedItem.quantity);\n            setCart(cart);\n        } else {\n            cart.push(selectedItem);\n        }\n\n        setCart(cart);\n        setQuantity(selectedItem.quantity);\n        sumTotalItems(cart);\n        sumTotalAmounts(cart);\n    };\n\n    const removeFromCart = id => {\n        let index = cart.findIndex(x => x.id == id);\n        cart.splice(index, 1);\n        setCart(cart);\n        sumTotalAmounts(cart);\n        sumTotalItems(cart);\n    };\n\n    const sumTotalItems = () => {\n        let total = 0;\n        total = cart.length;\n        setTotalItems(total);\n    };\n\n    const sumTotalAmounts = () => {\n        let total = 0;\n        for (var i = 0; i < cart.length; i++) {\n            total += cart[i].price * parseInt(cart[i].quantity);\n        }\n        setTotalAmounts(\n            Number(Math.round(parseFloat(total + \"e\" + 2)) + \"e-\" + 2)\n        );\n    };\n\n    const updateQuantity = qty => {\n        setQuantity(Math.floor(qty));\n    };\n\n    return (\n        <ShopContext.Provider\n            value={{\n                items,\n                quantity,\n                cart,\n                totalItems,\n                totalAmounts,\n                addToCart,\n                removeFromCart,\n                updateQuantity\n            }}\n        >\n            {props.children}\n        </ShopContext.Provider>\n    );\n};\n","import { useState } from \"react\";\n\nexport default initVal => {\n    const [val, setVal] = useState(initVal);\n    const handleChange = evt => {\n        setVal({ ...val, [evt.target.name]: evt.target.value });\n    };\n    const reset = () => {\n        setVal(\"\");\n    };\n    return [val, handleChange, reset];\n};\n","module.exports = require(\"core-js/library/fn/map\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","var _Object$assign = require(\"../core-js/object/assign\");\n\nfunction _extends() {\n  module.exports = _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _Object$getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            _Object$defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nmodule.exports = _interopRequireWildcard;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _map=_interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/map\"));var _url=require(\"url\");var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _router=_interopRequireDefault(require(\"./router\"));var _rewriteUrlForExport=require(\"next-server/dist/lib/router/rewrite-url-for-export\");var _utils=require(\"next-server/dist/lib/utils\");/* global __NEXT_DATA__ */function isLocal(href){const url=(0,_url.parse)(href,false,true);const origin=(0,_url.parse)((0,_utils.getLocationOrigin)(),false,true);return!url.host||url.protocol===origin.protocol&&url.host===origin.host;}function memoizedFormatUrl(formatFunc){let lastHref=null;let lastAs=null;let lastResult=null;return(href,as)=>{if(lastResult&&href===lastHref&&as===lastAs){return lastResult;}const result=formatFunc(href,as);lastHref=href;lastAs=as;lastResult=result;return result;};}function formatUrl(url){return url&&typeof url==='object'?(0,_utils.formatWithValidation)(url):url;}let observer;const listeners=new _map.default();const IntersectionObserver=typeof window!=='undefined'?window.IntersectionObserver:null;function getObserver(){// Return shared instance of IntersectionObserver if already created\nif(observer){return observer;}// Only create shared IntersectionObserver if supported in browser\nif(!IntersectionObserver){return undefined;}return observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(!listeners.has(entry.target)){return;}const cb=listeners.get(entry.target);if(entry.isIntersecting||entry.intersectionRatio>0){observer.unobserve(entry.target);listeners.delete(entry.target);cb();}});},{rootMargin:'200px'});}const listenToIntersections=(el,cb)=>{const observer=getObserver();if(!observer){return()=>{};}observer.observe(el);listeners.set(el,cb);return()=>{observer.unobserve(el);listeners.delete(el);};};class Link extends _react.Component{constructor(){super(...arguments);this.cleanUpListeners=()=>{};this.formatUrls=memoizedFormatUrl((href,asHref)=>{return{href:formatUrl(href),as:asHref?formatUrl(asHref):asHref};});this.linkClicked=e=>{// @ts-ignore target exists on currentTarget\nconst{nodeName,target}=e.currentTarget;if(nodeName==='A'&&(target&&target!=='_self'||e.metaKey||e.ctrlKey||e.shiftKey||e.nativeEvent&&e.nativeEvent.which===2)){// ignore click for new tab / new window behavior\nreturn;}let{href,as}=this.formatUrls(this.props.href,this.props.as);if(!isLocal(href)){// ignore click if it's outside our scope\nreturn;}const{pathname}=window.location;href=(0,_url.resolve)(pathname,href);as=as?(0,_url.resolve)(pathname,as):href;e.preventDefault();//  avoid scroll for urls with anchor refs\nlet{scroll}=this.props;if(scroll==null){scroll=as.indexOf('#')<0;}// replace state instead of push if prop is present\n_router.default[this.props.replace?'replace':'push'](href,as,{shallow:this.props.shallow}).then(success=>{if(!success)return;if(scroll){window.scrollTo(0,0);document.body.focus();}});};}componentWillUnmount(){this.cleanUpListeners();}handleRef(ref){if(this.props.prefetch&&IntersectionObserver&&ref&&ref.tagName){this.cleanUpListeners();this.cleanUpListeners=listenToIntersections(ref,()=>{this.prefetch();});}}// The function is memoized so that no extra lifecycles are needed\n// as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\nprefetch(){if(!this.props.prefetch||typeof window==='undefined')return;// Prefetch the JSON page if asked (only in the client)\nconst{pathname}=window.location;const{href:parsedHref}=this.formatUrls(this.props.href,this.props.as);const href=(0,_url.resolve)(pathname,parsedHref);_router.default.prefetch(href);}render(){let{children}=this.props;const{href,as}=this.formatUrls(this.props.href,this.props.as);// Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag\nif(typeof children==='string'){children=_react.default.createElement(\"a\",null,children);}// This will return the first child, if multiple are provided it will throw an error\nconst child=_react.Children.only(children);const props={ref:el=>this.handleRef(el),onMouseEnter:e=>{if(child.props&&typeof child.props.onMouseEnter==='function'){child.props.onMouseEnter(e);}this.prefetch();},onClick:e=>{if(child.props&&typeof child.props.onClick==='function'){child.props.onClick(e);}if(!e.defaultPrevented){this.linkClicked(e);}}// If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n// defined, we specify the current 'href', so that repetition is not needed by the user\n};if(this.props.passHref||child.type==='a'&&!('href'in child.props)){props.href=as||href;}// Add the ending slash to the paths. So, we can serve the\n// \"<page>/index.html\" directly.\nif(process.env.__NEXT_EXPORT_TRAILING_SLASH){if(props.href&&typeof __NEXT_DATA__!=='undefined'&&__NEXT_DATA__.nextExport){props.href=(0,_rewriteUrlForExport.rewriteUrlForNextExport)(props.href);}}return _react.default.cloneElement(child,props);}}Link.propTypes=void 0;Link.defaultProps={prefetch:true};if(process.env.NODE_ENV==='development'){const warn=(0,_utils.execOnce)(console.error);// This module gets removed by webpack.IgnorePlugin\nconst exact=require('prop-types-exact');Link.propTypes=exact({href:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]).isRequired,as:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),prefetch:_propTypes.default.bool,replace:_propTypes.default.bool,shallow:_propTypes.default.bool,passHref:_propTypes.default.bool,scroll:_propTypes.default.bool,children:_propTypes.default.oneOfType([_propTypes.default.element,(props,propName)=>{const value=props[propName];if(typeof value==='string'){warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");}return null;}]).isRequired});}var _default=Link;exports.default=_default;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.useRouter=useRouter;exports.makePublicRouterInstance=makePublicRouterInstance;exports.createRouter=exports.withRouter=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _defineProperty=_interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/define-property\"));var _react=_interopRequireDefault(require(\"react\"));var _router2=_interopRequireWildcard(require(\"next-server/dist/lib/router/router\"));exports.Router=_router2.default;exports.NextRouter=_router2.NextRouter;var _routerContext=require(\"next-server/dist/lib/router-context\");var _withRouter=_interopRequireDefault(require(\"./with-router\"));exports.withRouter=_withRouter.default;/* global window */const singletonRouter={router:null,// holds the actual router instance\nreadyCallbacks:[],ready(cb){if(this.router)return cb();if(typeof window!=='undefined'){this.readyCallbacks.push(cb);}}};// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields=['pathname','route','query','asPath'];const propertyFields=['components'];const routerEvents=['routeChangeStart','beforeHistoryChange','routeChangeComplete','routeChangeError','hashChangeStart','hashChangeComplete'];const coreMethodFields=['push','replace','reload','back','prefetch','beforePopState'];// Events is a static property on the router, the router doesn't have to be initialized to use it\n(0,_defineProperty.default)(singletonRouter,'events',{get(){return _router2.default.events;}});propertyFields.concat(urlPropertyFields).forEach(field=>{// Here we need to use Object.defineProperty because, we need to return\n// the property assigned to the actual router\n// The value might get changed as we change routes and this is the\n// proper way to access it\n(0,_defineProperty.default)(singletonRouter,field,{get(){const router=getRouter();return router[field];}});});coreMethodFields.forEach(field=>{// We don't really know the types here, so we add them later instead\n;singletonRouter[field]=function(){const router=getRouter();return router[field](...arguments);};});routerEvents.forEach(event=>{singletonRouter.ready(()=>{_router2.default.events.on(event,function(){const eventField=\"on\"+event.charAt(0).toUpperCase()+event.substring(1);const _singletonRouter=singletonRouter;if(_singletonRouter[eventField]){try{_singletonRouter[eventField](...arguments);}catch(err){// tslint:disable-next-line:no-console\nconsole.error(\"Error when running the Router event: \"+eventField);// tslint:disable-next-line:no-console\nconsole.error(err.message+\"\\n\"+err.stack);}}});});});function getRouter(){if(!singletonRouter.router){const message='No router instance found.\\n'+'You should only use \"next/router\" inside the client side of your app.\\n';throw new Error(message);}return singletonRouter.router;}// Export the singletonRouter and this is the public API.\nvar _default=singletonRouter;// Reexport the withRoute HOC\nexports.default=_default;function useRouter(){return _react.default.useContext(_routerContext.RouterContext);}// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nconst createRouter=function createRouter(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}singletonRouter.router=new _router2.default(...args);singletonRouter.readyCallbacks.forEach(cb=>cb());singletonRouter.readyCallbacks=[];return singletonRouter.router;};// This function is used to create the `withRouter` router instance\nexports.createRouter=createRouter;function makePublicRouterInstance(router){const _router=router;const instance={};for(const property of urlPropertyFields){if(typeof _router[property]==='object'){instance[property]=(0,_extends2.default)({},_router[property]);// makes sure query is not stateful\ncontinue;}instance[property]=_router[property];}// Events is a static property on the router, the router doesn't have to be initialized to use it\ninstance.events=_router2.default.events;propertyFields.forEach(field=>{// Here we need to use Object.defineProperty because, we need to return\n// the property assigned to the actual router\n// The value might get changed as we change routes and this is the\n// proper way to access it\n(0,_defineProperty.default)(instance,field,{get(){return _router[field];}});});coreMethodFields.forEach(field=>{instance[field]=function(){return _router[field](...arguments);};});return instance;}","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=withRouter;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));function withRouter(ComposedComponent){class WithRouteWrapper extends _react.default.Component{constructor(){super(...arguments);this.context=void 0;}render(){return _react.default.createElement(ComposedComponent,(0,_extends2.default)({router:this.context.router},this.props));}}WithRouteWrapper.displayName=void 0;WithRouteWrapper.getInitialProps=void 0;WithRouteWrapper.contextTypes={router:_propTypes.default.object};WithRouteWrapper.getInitialProps=ComposedComponent.getInitialProps;if(process.env.NODE_ENV!=='production'){const name=ComposedComponent.displayName||ComposedComponent.name||'Unknown';WithRouteWrapper.displayName=\"withRouter(\"+name+\")\";}return WithRouteWrapper;}","module.exports = require('./dist/client/link')\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckoutCart from \"../components/checkout/CheckoutCart\";\nimport Billing from \"../components/checkout/Billing\";\nimport Payment from \"../components/checkout/Payment\";\nimport Confirm from \"../components/checkout/Confirm\";\nimport CheckoutStyles from \"../styles/CheckoutStyles\";\nimport { ShopContext } from \"../contexts/ShopContext\";\nimport useInputState from \"../hooks/useInputState\";\nimport {\n    formatCreditCardNumber,\n    formatCVC,\n    formatExpirationDate\n} from \"../components/checkout/CardFormat\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(CheckoutStyles);\n\nconst initCheckout = {\n    country: \"\",\n    city: \"\",\n    zipcode: \"\",\n    address: \"\",\n    name: \"\",\n    companyName: \"\",\n    phone: \"\",\n    email: \"\",\n    cardType: \"\",\n    cardNum: \"\",\n    cardName: \"\",\n    cvc: \"\",\n    expiry: \"\"\n};\n\nconst steps = [\n    \"Shopping Cart\",\n    \"Billing & Shipping Method\",\n    \"Payment Method\",\n    \"Confirm Order\"\n];\n\nconst Checkout = () => {\n    const classes = useStyles();\n\n    const { cart, removeFromCart } = useContext(ShopContext);\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [selected, setSelected] = useState(\n        cart.length > 0 ? cart.map(el => el.id) : []\n    );\n\n    const selectedItems = cart.filter(el => selected.includes(el.id));\n\n    const [checkoutInput, setCheckoutInput] = useInputState(initCheckout);\n\n    // Stepper function\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    //CheckoutCart function\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            setSelected(cart.map(el => el.id));\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n        console.log(selected);\n    };\n\n    const removeFromSelected = id => {\n        let index = selected.findIndex(el => el == id);\n        selected.splice(index, 1);\n        setSelected(selected);\n    };\n\n    const handleRemove = id => {\n        removeFromCart(id);\n        removeFromSelected(id);\n    };\n\n    const handleRemoveBundle = idArr => {\n        idArr.forEach(el => {\n            removeFromCart(el);\n            removeFromSelected(el);\n        });\n    };\n\n    const sumSelectedAmounts = () => {\n        let total = 0;\n        for (var i = 0; i < selectedItems.length; i++) {\n            total +=\n                selectedItems[i].price * parseInt(selectedItems[i].quantity);\n        }\n\n        return Number(Math.round(parseFloat(total + \"e\" + 2)) + \"e-\" + 2);\n    };\n\n    // Payment function\n    const handleCardInput = evt => {\n        if (evt.target.name === \"cardNum\") {\n            evt.target.value = formatCreditCardNumber(evt.target.value);\n            setCheckoutInput(evt);\n        } else if (evt.target.name === \"expiry\") {\n            evt.target.value = formatExpirationDate(evt.target.value);\n            setCheckoutInput(evt);\n        } else if (evt.target.name === \"cvc\") {\n            evt.target.value = formatCVC(evt.target.value);\n            setCheckoutInput(evt);\n        }\n    };\n\n    // Place Order\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        const {\n            country,\n            city,\n            zipcode,\n            address,\n            name,\n            companyName,\n            phone,\n            email,\n            cardNum\n        } = checkoutInput;\n\n        const last4CardNum = cardNum.toString().substr(-4);\n\n        // axios\n        //     .post(\"/checkout\", {\n        //         country,\n        //         city,\n        //         zipcode,\n        //         address,\n        //         name,\n        //         companyName,\n        //         phone,\n        //         email,\n        //         last4CardNum,\n        //         selectedItems\n        //     })\n        //     .then(res => {\n        //         console.log(\"Order is sent!: \" + res.status);\n        //     })\n        //     .catch(err => {\n        //         console.log(err, \"Can't submit order!\");\n        //     });\n        alert(\n            `${country},\n            ${city},\n            ${zipcode},\n            ${address},\n            ${name},\n            ${companyName},\n            ${phone},\n            ${email},\n            ${cardNum}`\n        );\n        handleNext();\n    };\n\n    const getStepContent = step => {\n        switch (step) {\n            case 0:\n                return (\n                    <CheckoutCart\n                        selected={selected}\n                        handleSelectAllClick={handleSelectAllClick}\n                        handleClick={handleClick}\n                        handleRemove={handleRemove}\n                        sumSelectedAmounts={sumSelectedAmounts}\n                    />\n                );\n            case 1:\n                return (\n                    <Billing\n                        checkoutInput={checkoutInput}\n                        setCheckoutInput={setCheckoutInput}\n                    />\n                );\n            case 2:\n                return (\n                    <Payment\n                        checkoutInput={checkoutInput}\n                        setCheckoutInput={setCheckoutInput}\n                        handleCardInput={handleCardInput}\n                    />\n                );\n            case 3:\n                return (\n                    <Confirm\n                        checkoutInput={checkoutInput}\n                        selected={selected}\n                        isPaid={false}\n                        selectedItems={selectedItems}\n                        handleReset={handleReset}\n                        sumSelectedAmounts={sumSelectedAmounts}\n                    />\n                );\n            default:\n                return \"Unknown step\";\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Container>\n                <Typography className={classes.title} variant=\"h5\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => (\n                        <Step key={index}>\n                            <StepLabel\n                                StepIconProps={{\n                                    classes: {\n                                        completed: classes.icon,\n                                        active: classes.icon\n                                    }\n                                }}\n                            >\n                                {label}\n                            </StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <Paper elevation={0} className={classes.paper}>\n                    {activeStep === steps.length ? (\n                        <Confirm\n                            checkoutInput={checkoutInput}\n                            selected={selected}\n                            isPaid={true}\n                            handleReset={handleReset}\n                            selectedItems={selectedItems}\n                            sumSelectedAmounts={sumSelectedAmounts}\n                        />\n                    ) : (\n                        <React.Fragment>\n                            {getStepContent(activeStep)}\n                            <div>\n                                {activeStep === steps.length - 1 ? (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        className={classes.btnNext}\n                                        onClick={handleSubmit}\n                                    >\n                                        Place Order\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={handleNext}\n                                        className={classes.btnNext}\n                                    >\n                                        Next\n                                    </Button>\n                                )}\n\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.btnBack}\n                                >\n                                    Back\n                                </Button>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </Paper>\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default Checkout;\n","import { lighten } from \"@material-ui/core/styles\";\n\nexport default theme => ({\n    container: {\n        textAlign: \"left\"\n    },\n    title: {\n        fontSize: \"3em\",\n        margin: theme.spacing(6, 0),\n        fontWeight: 500\n    },\n    paper: {\n        padding: theme.spacing(2, 6),\n        marginBottom: theme.spacing(12)\n    },\n    btnNext: {\n        float: \"right\",\n        backgroundColor: \"PaleVioletRed\"\n    },\n    icon: {\n        color: \"#C52C57 !important\"\n    }\n});\n","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardContent\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/Container\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Step\");","module.exports = require(\"@material-ui/core/StepLabel\");","module.exports = require(\"@material-ui/core/Stepper\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/Table\");","module.exports = require(\"@material-ui/core/TableBody\");","module.exports = require(\"@material-ui/core/TableCell\");","module.exports = require(\"@material-ui/core/TableHead\");","module.exports = require(\"@material-ui/core/TablePagination\");","module.exports = require(\"@material-ui/core/TableRow\");","module.exports = require(\"@material-ui/core/TableSortLabel\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Tooltip\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Close\");","module.exports = require(\"@material-ui/icons/Delete\");","module.exports = require(\"@material-ui/icons/FilterList\");","module.exports = require(\"axios\");","module.exports = require(\"clsx\");","module.exports = require(\"core-js/library/fn/map\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"next-server/dist/lib/router-context\");","module.exports = require(\"next-server/dist/lib/router/rewrite-url-for-export\");","module.exports = require(\"next-server/dist/lib/router/router\");","module.exports = require(\"next-server/dist/lib/utils\");","module.exports = require(\"payment\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"react-country-region-selector\");","module.exports = require(\"url\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAYA;AAtBA;AAwBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AANA;AA7BA;AACA;AAyCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAXA;AAcA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAVA;AAaA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAdA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAlBA;AAuBA;AACA;AAFA;AAUA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAXA;AAcA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAXA;AAcA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAfA;AAqBA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAfA;AAkBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAZA;AAmBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAIA;AAlBA;AACA;AAoBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAbA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AA5BA;AACA;AAiCA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAFA;AAOA;AAAA;AAGA;AAAA;AAEA;AAKA;AANA;AAWA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAQA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAIA;AAAA;AAOA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AAFA;AAIA;AAAA;AASA;AAAA;AACA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAzCA;AACA;AA6CA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAGA;AAAA;AAKA;AAAA;AAAA;AAQA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAEA;AACA;AAFA;AAKA;AAAA;AAMA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AAFA;AAWA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AANA;AA/BA;AACA;AA2CA;AAEA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAlBA;AAsBA;AACA;AAFA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAXA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAfA;AAkBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAfA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AAhBA;AAuBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACheA;;;;;;;;;;;;;;;;;AChJA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AADA;AAAA;AACA;AAfA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACjzBA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAgBA;AACA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAEA;AACA;AAFA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AAtCA;AAwCA;AACA;AACA;AAGA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AADA;AADA;AAaA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAcA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AAHA;AAcA;AACA;AACA;;;;;;;;;;;;AC1TA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAjsourceRoot":""}