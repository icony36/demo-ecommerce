{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Link from \"next/link\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\nimport { Icon } from \"@material-ui/core\";\n\nvar ToolbarStyles = function ToolbarStyles(theme) {\n  return {\n    toolbar: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n};\n\nvar useToolbarStyles = makeStyles(ToolbarStyles);\n\nvar EnhancedToolbar = function EnhancedToolbar(props) {\n  var classes = useToolbarStyles();\n  var numSelected = props.numSelected,\n      removeAll = props.removeAll;\n  return React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.title\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\"\n  }, numSelected, \" \", numSelected > 1 ? \"items\" : \"item\", \" selected\")), React.createElement(\"div\", {\n    className: classes.spacer\n  }));\n};\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      marginBottom: theme.spacing(6),\n      overflowX: \"auto\"\n    },\n    name: {\n      marginLeft: theme.spacing(2),\n      cursor: \"pointer\"\n    },\n    item: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    img: _defineProperty({\n      width: \"40%\",\n      verticalAlign: \"center\"\n    }, theme.breakpoints.down(\"xs\"), {\n      display: \"none\"\n    }),\n    numberCell: {\n      width: \"20%\"\n    },\n    total: {\n      padding: theme.spacing(1),\n      \"float\": \"right\",\n      textAlign: \"right\"\n    },\n    totalWord: {\n      fontWeight: 500,\n      color: \"#C52C57\"\n    }\n  };\n};\n\nvar useStyles = makeStyles(styles);\n\nvar CheckoutCart = function CheckoutCart(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(ShopContext),\n      cart = _useContext.cart,\n      totalItems = _useContext.totalItems,\n      totalAmounts = _useContext.totalAmounts,\n      removeFromCart = _useContext.removeFromCart;\n\n  var _useState = useState(cart.length > 0 ? cart.map(function (el) {\n    return el.id;\n  }) : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var isSelected = function isSelected(id) {\n    return selected.indexOf(id) !== -1;\n  };\n\n  var handleSelectAllClick = function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      setSelected(cart.map(function (el) {\n        return el.id;\n      }));\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  var handleClick = function handleClick(event, id) {\n    var selectedIndex = selected.indexOf(id);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n    console.log(selected);\n  };\n\n  var removeFromSelected = function removeFromSelected(id) {\n    var index = selected.findIndex(function (el) {\n      return el == id;\n    });\n    selected.splice(index, 1);\n    setSelected(selected);\n  };\n\n  var handleRemove = function handleRemove(id) {\n    removeFromCart(id);\n    removeFromSelected(id);\n  };\n\n  var handleRemoveBundle = function handleRemoveBundle(idArr) {\n    idArr.forEach(function (el) {\n      removeFromCart(el);\n      removeFromSelected(el);\n    });\n  };\n\n  return React.createElement(Paper, {\n    elevation: 0,\n    className: classes.paper\n  }, selected.length > 0 ? React.createElement(EnhancedToolbar, {\n    numSelected: selected.length,\n    removeAll: function removeAll() {\n      return handleRemoveBundle(selected);\n    }\n  }) : \"\", React.createElement(Table, {\n    className: classes.table\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, {\n    padding: \"checkbox\"\n  }, React.createElement(Checkbox, {\n    checked: cart.length > 0 ? selected.length === cart.length : false,\n    onChange: handleSelectAllClick\n  })), React.createElement(TableCell, null, \"Items\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Unit Price\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Quantity\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Total Price\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Actions\"))), React.createElement(TableBody, null, cart.map(function (el, i) {\n    return React.createElement(TableRow, {\n      key: i\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\"\n    }, React.createElement(Checkbox, {\n      checked: isSelected(el.id),\n      onChange: function onChange(event) {\n        return handleClick(event, el.id);\n      }\n    })), React.createElement(TableCell, {\n      className: classes.itemCell,\n      component: \"th\",\n      scope: \"row\"\n    }, React.createElement(\"div\", {\n      className: classes.item\n    }, React.createElement(\"img\", {\n      className: classes.img,\n      src: el.imgSrc\n    }), React.createElement(Link, {\n      href: \"/shop/[id]\",\n      as: \"/shop/\".concat(el.id)\n    }, React.createElement(Typography, {\n      className: classes.name\n    }, el.name)))), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.numberCell\n    }, \"$ \", el.price), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.numberCell\n    }, el.quantity), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.numberCell\n    }, \"$ \", el.price * el.quantity), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.actionCell\n    }, React.createElement(IconButton, {\n      onClick: handleRemove\n    }, React.createElement(CloseIcon, null))));\n  }))), React.createElement(\"div\", {\n    className: classes.total\n  }, React.createElement(Typography, {\n    className: classes.totalWord\n  }, \"TOTAL (\", totalItems, \" \", totalItems > 1 ? \"items\" : \"item\", \"): $\", \" \", totalAmounts)));\n};\n\nexport default CheckoutCart;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/components/checkout/CheckoutCart.js"],"names":["useContext","useState","makeStyles","lighten","PropTypes","clsx","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","MenuItem","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","CloseIcon","Link","ShopContext","Icon","ToolbarStyles","theme","toolbar","paddingLeft","spacing","paddingRight","color","palette","secondary","main","backgroundColor","light","spacer","flex","actions","text","title","useToolbarStyles","EnhancedToolbar","props","classes","numSelected","removeAll","styles","paper","marginBottom","overflowX","name","marginLeft","cursor","item","display","alignItems","img","width","verticalAlign","breakpoints","down","numberCell","total","padding","textAlign","totalWord","fontWeight","useStyles","CheckoutCart","cart","totalItems","totalAmounts","removeFromCart","length","map","el","id","selected","setSelected","isSelected","indexOf","handleSelectAllClick","event","target","checked","handleClick","selectedIndex","newSelected","concat","slice","console","log","removeFromSelected","index","findIndex","splice","handleRemove","handleRemoveBundle","idArr","forEach","table","i","itemCell","imgSrc","price","quantity","actionCell"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,0BAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAK;AAC5BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAELC,MAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFT;AAGLE,MAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcC,SAAd,CAAwBC,IAH1B;AAILC,MAAAA,eAAe,EAAEnC,OAAO,CAAC0B,KAAK,CAACM,OAAN,CAAcC,SAAd,CAAwBG,KAAzB,EAAgC,IAAhC;AAJnB,KADmB;AAO5BC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF,KAPoB;AAU5BC,IAAAA,OAAO,EAAE;AACLR,MAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcQ,IAAd,CAAmBP;AADrB,KAVmB;AAa5BQ,IAAAA,KAAK,EAAE;AACHH,MAAAA,IAAI,EAAE;AADH;AAbqB,GAAL;AAAA,CAA3B;;AAkBA,IAAMI,gBAAgB,GAAG3C,UAAU,CAAC0B,aAAD,CAAnC;;AAEA,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,MAAMC,OAAO,GAAGH,gBAAgB,EAAhC;AAD6B,MAErBI,WAFqB,GAEMF,KAFN,CAErBE,WAFqB;AAAA,MAERC,SAFQ,GAEMH,KAFN,CAERG,SAFQ;AAI7B,SACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEF,OAAO,CAAClB;AAA5B,KACI;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAACJ;AAAxB,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAC;AAApC,KACKK,WADL,OACmBA,WAAW,GAAG,CAAd,GAAkB,OAAlB,GAA4B,MAD/C,cADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACR;AAAxB,IANJ,CADJ;AAiBH,CArBD;;AAuBA,IAAMW,MAAM,GAAG,SAATA,MAAS,CAAAtB,KAAK;AAAA,SAAK;AACrBuB,IAAAA,KAAK,EAAE;AACHC,MAAAA,YAAY,EAAExB,KAAK,CAACG,OAAN,CAAc,CAAd,CADX;AAEHsB,MAAAA,SAAS,EAAE;AAFR,KADc;AAKrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE3B,KAAK,CAACG,OAAN,CAAc,CAAd,CADV;AAEFyB,MAAAA,MAAM,EAAE;AAFN,KALe;AASrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,UAAU,EAAE;AAFV,KATe;AAarBC,IAAAA,GAAG;AACCC,MAAAA,KAAK,EAAE,KADR;AAECC,MAAAA,aAAa,EAAE;AAFhB,OAGElC,KAAK,CAACmC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHF,EAGiC;AAC5BN,MAAAA,OAAO,EAAE;AADmB,KAHjC,CAbkB;AAoBrBO,IAAAA,UAAU,EAAE;AACRJ,MAAAA,KAAK,EAAE;AADC,KApBS;AAuBrBK,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEvC,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAEH,eAAO,OAFJ;AAGHqC,MAAAA,SAAS,EAAE;AAHR,KAvBc;AA4BrBC,IAAAA,SAAS,EAAE;AACPC,MAAAA,UAAU,EAAE,GADL;AAEPrC,MAAAA,KAAK,EAAE;AAFA;AA5BU,GAAL;AAAA,CAApB;;AAkCA,IAAMsC,SAAS,GAAGtE,UAAU,CAACiD,MAAD,CAA5B;;AAEA,IAAMsB,YAAY,GAAG,SAAfA,YAAe,CAAA1B,KAAK,EAAI;AAC1B,MAAMC,OAAO,GAAGwB,SAAS,EAAzB;;AAD0B,oBAEiCxE,UAAU,CACjE0B,WADiE,CAF3C;AAAA,MAElBgD,IAFkB,eAElBA,IAFkB;AAAA,MAEZC,UAFY,eAEZA,UAFY;AAAA,MAEAC,YAFA,eAEAA,YAFA;AAAA,MAEcC,cAFd,eAEcA,cAFd;;AAAA,kBAKM5E,QAAQ,CACpCyE,IAAI,CAACI,MAAL,GAAc,CAAd,GAAkBJ,IAAI,CAACK,GAAL,CAAS,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,EAAP;AAAA,GAAX,CAAlB,GAA0C,EADN,CALd;AAAA;AAAA,MAKnBC,QALmB;AAAA,MAKTC,WALS;;AAS1B,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAH,EAAE;AAAA,WAAIC,QAAQ,CAACG,OAAT,CAAiBJ,EAAjB,MAAyB,CAAC,CAA9B;AAAA,GAArB;;AAEA,MAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAClC,QAAIA,KAAK,CAACC,MAAN,CAAaC,OAAjB,EAA0B;AACtBN,MAAAA,WAAW,CAACT,IAAI,CAACK,GAAL,CAAS,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,EAAP;AAAA,OAAX,CAAD,CAAX;AACA;AACH;;AACDE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAND;;AAQA,MAAMO,WAAW,GAAG,SAAdA,WAAc,CAACH,KAAD,EAAQN,EAAR,EAAe;AAC/B,QAAMU,aAAa,GAAGT,QAAQ,CAACG,OAAT,CAAiBJ,EAAjB,CAAtB;AAEA,QAAIW,WAAW,GAAG,EAAlB;;AAEA,QAAID,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACtBC,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBX,QAAnB,EAA6BD,EAA7B,CAAd;AACH,KAFD,MAEO,IAAIU,aAAa,KAAK,CAAtB,EAAyB;AAC5BC,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBX,QAAQ,CAACY,KAAT,CAAe,CAAf,CAAnB,CAAd;AACH,KAFM,MAEA,IAAIH,aAAa,KAAKT,QAAQ,CAACJ,MAAT,GAAkB,CAAxC,EAA2C;AAC9Cc,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBX,QAAQ,CAACY,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACH,KAFM,MAEA,IAAIH,aAAa,GAAG,CAApB,EAAuB;AAC1BC,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACVX,QAAQ,CAACY,KAAT,CAAe,CAAf,EAAkBH,aAAlB,CADU,EAEVT,QAAQ,CAACY,KAAT,CAAeH,aAAa,GAAG,CAA/B,CAFU,CAAd;AAIH;;AAEDR,IAAAA,WAAW,CAACS,WAAD,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACH,GApBD;;AAsBA,MAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAhB,EAAE,EAAI;AAC7B,QAAIiB,KAAK,GAAGhB,QAAQ,CAACiB,SAAT,CAAmB,UAAAnB,EAAE;AAAA,aAAIA,EAAE,IAAIC,EAAV;AAAA,KAArB,CAAZ;AACAC,IAAAA,QAAQ,CAACkB,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACAf,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAJD;;AAMA,MAAMmB,YAAY,GAAG,SAAfA,YAAe,CAAApB,EAAE,EAAI;AACvBJ,IAAAA,cAAc,CAACI,EAAD,CAAd;AACAgB,IAAAA,kBAAkB,CAAChB,EAAD,CAAlB;AACH,GAHD;;AAKA,MAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAChCA,IAAAA,KAAK,CAACC,OAAN,CAAc,UAAAxB,EAAE,EAAI;AAChBH,MAAAA,cAAc,CAACG,EAAD,CAAd;AACAiB,MAAAA,kBAAkB,CAACjB,EAAD,CAAlB;AACH,KAHD;AAIH,GALD;;AAOA,SACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,SAAS,EAAEhC,OAAO,CAACI;AAAxC,KACK8B,QAAQ,CAACJ,MAAT,GAAkB,CAAlB,GACG,oBAAC,eAAD;AACI,IAAA,WAAW,EAAEI,QAAQ,CAACJ,MAD1B;AAEI,IAAA,SAAS,EAAE;AAAA,aAAMwB,kBAAkB,CAACpB,QAAD,CAAxB;AAAA;AAFf,IADH,GAMG,EAPR,EASI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAElC,OAAO,CAACyD;AAA1B,KACI,oBAAC,SAAD,QACI,oBAAC,QAAD,QACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC;AAAnB,KACI,oBAAC,QAAD;AACI,IAAA,OAAO,EACH/B,IAAI,CAACI,MAAL,GAAc,CAAd,GACMI,QAAQ,CAACJ,MAAT,KAAoBJ,IAAI,CAACI,MAD/B,GAEM,KAJd;AAMI,IAAA,QAAQ,EAAEQ;AANd,IADJ,CADJ,EAWI,oBAAC,SAAD,gBAXJ,EAYI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,kBAZJ,EAaI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,gBAbJ,EAcI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,mBAdJ,EAeI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,eAfJ,CADJ,CADJ,EAoBI,oBAAC,SAAD,QACKZ,IAAI,CAACK,GAAL,CAAS,UAACC,EAAD,EAAK0B,CAAL,EAAW;AACjB,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA;AAAf,OACI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC;AAAnB,OACI,oBAAC,QAAD;AACI,MAAA,OAAO,EAAEtB,UAAU,CAACJ,EAAE,CAACC,EAAJ,CADvB;AAEI,MAAA,QAAQ,EAAE,kBAAAM,KAAK;AAAA,eACXG,WAAW,CAACH,KAAD,EAAQP,EAAE,CAACC,EAAX,CADA;AAAA;AAFnB,MADJ,CADJ,EASI,oBAAC,SAAD;AACI,MAAA,SAAS,EAAEjC,OAAO,CAAC2D,QADvB;AAEI,MAAA,SAAS,EAAC,IAFd;AAGI,MAAA,KAAK,EAAC;AAHV,OAKI;AAAK,MAAA,SAAS,EAAE3D,OAAO,CAACU;AAAxB,OACI;AACI,MAAA,SAAS,EAAEV,OAAO,CAACa,GADvB;AAEI,MAAA,GAAG,EAAEmB,EAAE,CAAC4B;AAFZ,MADJ,EAKI,oBAAC,IAAD;AACI,MAAA,IAAI,cADR;AAEI,MAAA,EAAE,kBAAW5B,EAAE,CAACC,EAAd;AAFN,OAII,oBAAC,UAAD;AACI,MAAA,SAAS,EAAEjC,OAAO,CAACO;AADvB,OAGKyB,EAAE,CAACzB,IAHR,CAJJ,CALJ,CALJ,CATJ,EA+BI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAEP,OAAO,CAACkB;AAFvB,aAIOc,EAAE,CAAC6B,KAJV,CA/BJ,EAqCI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAE7D,OAAO,CAACkB;AAFvB,OAIKc,EAAE,CAAC8B,QAJR,CArCJ,EA2CI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAE9D,OAAO,CAACkB;AAFvB,aAIOc,EAAE,CAAC6B,KAAH,GAAW7B,EAAE,CAAC8B,QAJrB,CA3CJ,EAiDI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAE9D,OAAO,CAAC+D;AAFvB,OAII,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEV;AAArB,OACI,oBAAC,SAAD,OADJ,CAJJ,CAjDJ,CADJ;AA4DH,GA7DA,CADL,CApBJ,CATJ,EA+FI;AAAK,IAAA,SAAS,EAAErD,OAAO,CAACmB;AAAxB,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEnB,OAAO,CAACsB;AAA/B,gBACYK,UADZ,OACyBA,UAAU,GAAG,CAAb,GAAiB,OAAjB,GAA2B,MADpD,UACgE,GADhE,EAEKC,YAFL,CADJ,CA/FJ,CADJ;AAwGH,CAnKD;;AAqKA,eAAeH,YAAf","sourcesContent":["import { useContext, useState } from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Link from \"next/link\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\nimport { Icon } from \"@material-ui/core\";\n\nconst ToolbarStyles = theme => ({\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    },\n    spacer: {\n        flex: \"1 1 100%\"\n    },\n    actions: {\n        color: theme.palette.text.secondary\n    },\n    title: {\n        flex: \"0 0 auto\"\n    }\n});\n\nconst useToolbarStyles = makeStyles(ToolbarStyles);\n\nconst EnhancedToolbar = props => {\n    const classes = useToolbarStyles();\n    const { numSelected, removeAll } = props;\n\n    return (\n        <Toolbar className={classes.toolbar}>\n            <div className={classes.title}>\n                <Typography color=\"inherit\" variant=\"subtitle1\">\n                    {numSelected} {numSelected > 1 ? \"items\" : \"item\"} selected\n                </Typography>\n            </div>\n            <div className={classes.spacer} />\n            {/* <div className={classes.actions}>\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\" onClick={removeAll}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            </div> */}\n        </Toolbar>\n    );\n};\n\nconst styles = theme => ({\n    paper: {\n        marginBottom: theme.spacing(6),\n        overflowX: \"auto\"\n    },\n    name: {\n        marginLeft: theme.spacing(2),\n        cursor: \"pointer\"\n    },\n    item: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    img: {\n        width: \"40%\",\n        verticalAlign: \"center\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        }\n    },\n    numberCell: {\n        width: \"20%\"\n    },\n    total: {\n        padding: theme.spacing(1),\n        float: \"right\",\n        textAlign: \"right\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\"\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst CheckoutCart = props => {\n    const classes = useStyles();\n    const { cart, totalItems, totalAmounts, removeFromCart } = useContext(\n        ShopContext\n    );\n    const [selected, setSelected] = useState(\n        cart.length > 0 ? cart.map(el => el.id) : []\n    );\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            setSelected(cart.map(el => el.id));\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n        console.log(selected);\n    };\n\n    const removeFromSelected = id => {\n        let index = selected.findIndex(el => el == id);\n        selected.splice(index, 1);\n        setSelected(selected);\n    };\n\n    const handleRemove = id => {\n        removeFromCart(id);\n        removeFromSelected(id);\n    };\n\n    const handleRemoveBundle = idArr => {\n        idArr.forEach(el => {\n            removeFromCart(el);\n            removeFromSelected(el);\n        });\n    };\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            {selected.length > 0 ? (\n                <EnhancedToolbar\n                    numSelected={selected.length}\n                    removeAll={() => handleRemoveBundle(selected)}\n                />\n            ) : (\n                \"\"\n            )}\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell padding=\"checkbox\">\n                            <Checkbox\n                                checked={\n                                    cart.length > 0\n                                        ? selected.length === cart.length\n                                        : false\n                                }\n                                onChange={handleSelectAllClick}\n                            />\n                        </TableCell>\n                        <TableCell>Items</TableCell>\n                        <TableCell align=\"right\">Unit Price</TableCell>\n                        <TableCell align=\"right\">Quantity</TableCell>\n                        <TableCell align=\"right\">Total Price</TableCell>\n                        <TableCell align=\"right\">Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {cart.map((el, i) => {\n                        return (\n                            <TableRow key={i}>\n                                <TableCell padding=\"checkbox\">\n                                    <Checkbox\n                                        checked={isSelected(el.id)}\n                                        onChange={event =>\n                                            handleClick(event, el.id)\n                                        }\n                                    />\n                                </TableCell>\n                                <TableCell\n                                    className={classes.itemCell}\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    <div className={classes.item}>\n                                        <img\n                                            className={classes.img}\n                                            src={el.imgSrc}\n                                        />\n                                        <Link\n                                            href={`/shop/[id]`}\n                                            as={`/shop/${el.id}`}\n                                        >\n                                            <Typography\n                                                className={classes.name}\n                                            >\n                                                {el.name}\n                                            </Typography>\n                                        </Link>\n                                    </div>\n                                </TableCell>\n                                <TableCell\n                                    align=\"right\"\n                                    className={classes.numberCell}\n                                >\n                                    $ {el.price}\n                                </TableCell>\n                                <TableCell\n                                    align=\"right\"\n                                    className={classes.numberCell}\n                                >\n                                    {el.quantity}\n                                </TableCell>\n                                <TableCell\n                                    align=\"right\"\n                                    className={classes.numberCell}\n                                >\n                                    $ {el.price * el.quantity}\n                                </TableCell>\n                                <TableCell\n                                    align=\"right\"\n                                    className={classes.actionCell}\n                                >\n                                    <IconButton onClick={handleRemove}>\n                                        <CloseIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n\n            <div className={classes.total}>\n                <Typography className={classes.totalWord}>\n                    TOTAL ({totalItems} {totalItems > 1 ? \"items\" : \"item\"}): ${\" \"}\n                    {totalAmounts}\n                </Typography>\n            </div>\n        </Paper>\n    );\n};\n\nexport default CheckoutCart;\n"]},"metadata":{},"sourceType":"module"}