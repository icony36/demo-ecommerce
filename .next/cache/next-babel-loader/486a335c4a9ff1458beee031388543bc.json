{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(6)\n    },\n    cardArea: _defineProperty({\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    }, theme.breakpoints.down(\"sm\"), {\n      display: \"block\"\n    }),\n    item: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    img: _defineProperty({\n      width: \"40%\",\n      verticalAlign: \"center\"\n    }, theme.breakpoints.down(\"xs\"), {\n      display: \"none\"\n    }),\n    name: {\n      marginLeft: theme.spacing(4),\n      cursor: \"pointer\"\n    },\n    numberCell: {\n      width: \"20%\"\n    },\n    total: {\n      marginTop: theme.spacing(2),\n      padding: theme.spacing(1),\n      textAlign: \"right\"\n    },\n    totalWord: {\n      fontWeight: 500,\n      color: \"#C52C57\"\n    },\n    subtotal: {\n      color: \"#C52C57\"\n    }\n  };\n};\n\nvar useStyles = makeStyles(styles);\nvar tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\nvar shippingFee = 0;\n\nvar Confirm = function Confirm(props) {\n  var classes = useStyles();\n\n  var _useContext = useContext(ShopContext),\n      cart = _useContext.cart,\n      totalAmounts = _useContext.totalAmounts;\n\n  var checkoutInput = props.checkoutInput;\n  return React.createElement(Paper, {\n    elevation: 0,\n    className: classes.paper\n  }, React.createElement(Typography, {\n    variant: \"h5\"\n  }, \"Confirm Order\"), React.createElement(\"div\", {\n    className: classes.cardArea\n  }, React.createElement(Card, {\n    className: classes.card,\n    elevation: 0\n  }, React.createElement(CardContent, null, React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\"\n  }, \"ShippingAddress\"), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.name), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.address), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.zipcode), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.city), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.country))), React.createElement(Card, {\n    className: classes.card,\n    elevation: 0\n  }, React.createElement(CardContent, null, React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\"\n  }, \"Payment Info\"), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, \"Name on card: \", checkoutInput.cardName), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, \"Card type: \", checkoutInput.cardType), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, \"Card number (last four digit):\", \" \", checkoutInput.cardNum.toString().substr(-4))))), React.createElement(Table, {\n    className: classes.table\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, null, \"Items\"), tableHead.map(function (el, i) {\n    return React.createElement(TableCell, {\n      key: i,\n      align: \"right\"\n    }, el);\n  }))), React.createElement(TableBody, null, cart.map(function (el, i) {\n    return React.createElement(TableRow, {\n      key: i\n    }, React.createElement(TableCell, {\n      className: classes.itemCell,\n      component: \"th\",\n      scope: \"row\"\n    }, React.createElement(\"div\", {\n      className: classes.item\n    }, React.createElement(\"img\", {\n      className: classes.img,\n      src: el.imgSrc\n    }), React.createElement(Typography, {\n      className: classes.name\n    }, el.name))), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.numberCell\n    }, \"$ \", el.price), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.numberCell\n    }, el.quantity), React.createElement(TableCell, {\n      align: \"right\",\n      className: classes.numberCell\n    }, \"$ \", el.price * el.quantity));\n  }))), React.createElement(\"div\", {\n    className: classes.total\n  }, React.createElement(Typography, {\n    className: classes.subtotal\n  }, \"Subtotal: $ \", totalAmounts), React.createElement(Typography, {\n    className: classes.subtotal\n  }, \"Shipping Fee: $ \", shippingFee), React.createElement(Typography, {\n    className: classes.totalWord\n  }, \"TOTAL PAID: $ \", totalAmounts + shippingFee)));\n};\n\nexport default Confirm;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/components/checkout/Confirm.js"],"names":["useContext","makeStyles","Card","CardActions","CardContent","Table","TableBody","TableCell","TableHead","TableRow","Paper","Typography","ShopContext","styles","theme","paper","padding","spacing","marginBottom","cardArea","display","justifyContent","breakpoints","down","item","alignItems","img","width","verticalAlign","name","marginLeft","cursor","numberCell","total","marginTop","textAlign","totalWord","fontWeight","color","subtotal","useStyles","tableHead","shippingFee","Confirm","props","classes","cart","totalAmounts","checkoutInput","card","address","zipcode","city","country","cardName","cardType","cardNum","toString","substr","table","map","el","i","itemCell","imgSrc","price","quantity"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAEHC,MAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFX,KADc;AAKrBE,IAAAA,QAAQ;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,cAAc,EAAE;AAFZ,OAGHP,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHG,EAG4B;AAC5BH,MAAAA,OAAO,EAAE;AADmB,KAH5B,CALa;AAYrBI,IAAAA,IAAI,EAAE;AACFJ,MAAAA,OAAO,EAAE,MADP;AAEFK,MAAAA,UAAU,EAAE;AAFV,KAZe;AAgBrBC,IAAAA,GAAG;AACCC,MAAAA,KAAK,EAAE,KADR;AAECC,MAAAA,aAAa,EAAE;AAFhB,OAGEd,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAHF,EAGiC;AAC5BH,MAAAA,OAAO,EAAE;AADmB,KAHjC,CAhBkB;AAuBrBS,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAEhB,KAAK,CAACG,OAAN,CAAc,CAAd,CADV;AAEFc,MAAAA,MAAM,EAAE;AAFN,KAvBe;AA2BrBC,IAAAA,UAAU,EAAE;AACRL,MAAAA,KAAK,EAAE;AADC,KA3BS;AA8BrBM,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEpB,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEHD,MAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAFN;AAGHkB,MAAAA,SAAS,EAAE;AAHR,KA9Bc;AAmCrBC,IAAAA,SAAS,EAAE;AACPC,MAAAA,UAAU,EAAE,GADL;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAnCU;AAuCrBC,IAAAA,QAAQ,EAAE;AACND,MAAAA,KAAK,EAAE;AADD;AAvCW,GAAL;AAAA,CAApB;;AA4CA,IAAME,SAAS,GAAGvC,UAAU,CAACY,MAAD,CAA5B;AAEA,IAAM4B,SAAS,GAAG,CAAC,YAAD,EAAe,UAAf,EAA2B,aAA3B,CAAlB;AAEA,IAAMC,WAAW,GAAG,CAApB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrB,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AADqB,oBAGUxC,UAAU,CAACY,WAAD,CAHpB;AAAA,MAGbkC,IAHa,eAGbA,IAHa;AAAA,MAGPC,YAHO,eAGPA,YAHO;;AAAA,MAKbC,aALa,GAKKJ,KALL,CAKbI,aALa;AAOrB,SACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,SAAS,EAAEH,OAAO,CAAC9B;AAAxC,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,qBADJ,EAGI;AAAK,IAAA,SAAS,EAAE8B,OAAO,CAAC1B;AAAxB,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE0B,OAAO,CAACI,IAAzB;AAA+B,IAAA,SAAS,EAAE;AAA1C,KACI,oBAAC,WAAD,QACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC;AAAnC,uBADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACKD,aAAa,CAACnB,IADnB,CAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACKmB,aAAa,CAACE,OADnB,CAPJ,EAUI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACKF,aAAa,CAACG,OADnB,CAVJ,EAaI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACKH,aAAa,CAACI,IADnB,CAbJ,EAgBI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACKJ,aAAa,CAACK,OADnB,CAhBJ,CADJ,CADJ,EAwBI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAER,OAAO,CAACI,IAAzB;AAA+B,IAAA,SAAS,EAAE;AAA1C,KACI,oBAAC,WAAD,QACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC;AAAnC,oBADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,uBACmBD,aAAa,CAACM,QADjC,CAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,oBACgBN,aAAa,CAACO,QAD9B,CAPJ,EAUI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC;AAAtC,uCACmC,GADnC,EAEKP,aAAa,CAACQ,OAAd,CAAsBC,QAAtB,GAAiCC,MAAjC,CAAwC,CAAC,CAAzC,CAFL,CAVJ,CADJ,CAxBJ,CAHJ,EA8CI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEb,OAAO,CAACc;AAA1B,KACI,oBAAC,SAAD,QACI,oBAAC,QAAD,QACI,oBAAC,SAAD,gBADJ,EAEKlB,SAAS,CAACmB,GAAV,CAAc,UAACC,EAAD,EAAKC,CAAL;AAAA,WACX,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,KAAK,EAAC;AAAzB,OACKD,EADL,CADW;AAAA,GAAd,CAFL,CADJ,CADJ,EAWI,oBAAC,SAAD,QACKf,IAAI,CAACc,GAAL,CAAS,UAACC,EAAD,EAAKC,CAAL;AAAA,WACN,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA;AAAf,OACI,oBAAC,SAAD;AACI,MAAA,SAAS,EAAEjB,OAAO,CAACkB,QADvB;AAEI,MAAA,SAAS,EAAC,IAFd;AAGI,MAAA,KAAK,EAAC;AAHV,OAKI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACrB;AAAxB,OACI;AACI,MAAA,SAAS,EAAEqB,OAAO,CAACnB,GADvB;AAEI,MAAA,GAAG,EAAEmC,EAAE,CAACG;AAFZ,MADJ,EAMI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEnB,OAAO,CAAChB;AAA/B,OACKgC,EAAE,CAAChC,IADR,CANJ,CALJ,CADJ,EAiBI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAEgB,OAAO,CAACb;AAFvB,aAIO6B,EAAE,CAACI,KAJV,CAjBJ,EAuBI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAEpB,OAAO,CAACb;AAFvB,OAIK6B,EAAE,CAACK,QAJR,CAvBJ,EA6BI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,SAAS,EAAErB,OAAO,CAACb;AAFvB,aAIO6B,EAAE,CAACI,KAAH,GAAWJ,EAAE,CAACK,QAJrB,CA7BJ,CADM;AAAA,GAAT,CADL,CAXJ,CA9CJ,EAmGI;AAAK,IAAA,SAAS,EAAErB,OAAO,CAACZ;AAAxB,KACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEY,OAAO,CAACN;AAA/B,qBACiBQ,YADjB,CADJ,EAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,OAAO,CAACN;AAA/B,yBACqBG,WADrB,CAJJ,EAOI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEG,OAAO,CAACT;AAA/B,uBACmBW,YAAY,GAAGL,WADlC,CAPJ,CAnGJ,CADJ;AAiHH,CAxHD;;AA0HA,eAAeC,OAAf","sourcesContent":["import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(6)\n    },\n    cardArea: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    item: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    img: {\n        width: \"40%\",\n        verticalAlign: \"center\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        }\n    },\n    name: {\n        marginLeft: theme.spacing(4),\n        cursor: \"pointer\"\n    },\n    numberCell: {\n        width: \"20%\"\n    },\n    total: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        textAlign: \"right\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\"\n    },\n    subtotal: {\n        color: \"#C52C57\"\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\n\nconst shippingFee = 0;\n\nconst Confirm = props => {\n    const classes = useStyles();\n\n    const { cart, totalAmounts } = useContext(ShopContext);\n\n    const { checkoutInput } = props;\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Typography variant=\"h5\">Confirm Order</Typography>\n\n            <div className={classes.cardArea}>\n                <Card className={classes.card} elevation={0}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            ShippingAddress\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.name}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.address}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.zipcode}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.city}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.country}\n                        </Typography>\n                    </CardContent>\n                </Card>\n\n                <Card className={classes.card} elevation={0}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            Payment Info\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Name on card: {checkoutInput.cardName}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Card type: {checkoutInput.cardType}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Card number (last four digit):{\" \"}\n                            {checkoutInput.cardNum.toString().substr(-4)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Items</TableCell>\n                        {tableHead.map((el, i) => (\n                            <TableCell key={i} align=\"right\">\n                                {el}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {cart.map((el, i) => (\n                        <TableRow key={i}>\n                            <TableCell\n                                className={classes.itemCell}\n                                component=\"th\"\n                                scope=\"row\"\n                            >\n                                <div className={classes.item}>\n                                    <img\n                                        className={classes.img}\n                                        src={el.imgSrc}\n                                    />\n\n                                    <Typography className={classes.name}>\n                                        {el.name}\n                                    </Typography>\n                                </div>\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                {el.quantity}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price * el.quantity}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n\n            <div className={classes.total}>\n                <Typography className={classes.subtotal}>\n                    Subtotal: $ {totalAmounts}\n                </Typography>\n                <Typography className={classes.subtotal}>\n                    Shipping Fee: $ {shippingFee}\n                </Typography>\n                <Typography className={classes.totalWord}>\n                    TOTAL PAID: $ {totalAmounts + shippingFee}\n                </Typography>\n            </div>\n        </Paper>\n    );\n};\n\nexport default Confirm;\n"]},"metadata":{},"sourceType":"module"}