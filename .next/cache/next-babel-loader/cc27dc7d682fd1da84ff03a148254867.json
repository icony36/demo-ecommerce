{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckoutCart from \"../components/checkout/CheckoutCart\";\nimport Billing from \"../components/checkout/Billing\";\nimport Payment from \"../components/checkout/Payment\";\nimport Confirm from \"../components/checkout/Confirm\";\nimport CheckoutStyles from \"../styles/CheckoutStyles\";\nimport { ShopContext } from \"../contexts/ShopContext\";\nimport useInputState from \"../hooks/useInputState\";\nimport { formatCreditCardNumber, formatCVC, formatExpirationDate } from \"../components/checkout/CardFormat\";\nimport axios from \"axios\";\nvar useStyles = makeStyles(CheckoutStyles);\nvar initCheckout = {\n  country: \"\",\n  city: \"\",\n  zipcode: \"\",\n  address: \"\",\n  name: \"\",\n  companyName: \"\",\n  phone: \"\",\n  email: \"\",\n  cardType: \"\",\n  cardNum: \"\",\n  cardName: \"\",\n  cvc: \"\",\n  expiry: \"\",\n  items: []\n};\nvar steps = [\"Shopping Cart\", \"Billing & Shipping Method\", \"Payment Method\", \"Confirm Order\"];\n\nvar Checkout = function Checkout() {\n  var classes = useStyles();\n\n  var _useContext = useContext(ShopContext),\n      cart = _useContext.cart,\n      totalItems = _useContext.totalItems,\n      totalAmounts = _useContext.totalAmounts,\n      removeFromCart = _useContext.removeFromCart;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeStep = _useState2[0],\n      setActiveStep = _useState2[1];\n\n  var _useState3 = useState(cart.length > 0 ? cart.map(function (el) {\n    return el.id;\n  }) : []),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var _useInputState = useInputState(initCheckout),\n      _useInputState2 = _slicedToArray(_useInputState, 2),\n      checkoutInput = _useInputState2[0],\n      setCheckoutInput = _useInputState2[1]; // Stepper function\n\n\n  var handleNext = function handleNext() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setActiveStep(0);\n  }; //CheckoutCart function\n\n\n  var handleSelectAllClick = function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      setSelected(cart.map(function (el) {\n        return el.id;\n      }));\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  var handleClick = function handleClick(event, id) {\n    var selectedIndex = selected.indexOf(id);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n    console.log(selected);\n  };\n\n  var removeFromSelected = function removeFromSelected(id) {\n    var index = selected.findIndex(function (el) {\n      return el == id;\n    });\n    selected.splice(index, 1);\n    setSelected(selected);\n  };\n\n  var handleRemove = function handleRemove(id) {\n    removeFromCart(id);\n    removeFromSelected(id);\n  };\n\n  var handleRemoveBundle = function handleRemoveBundle(idArr) {\n    idArr.forEach(function (el) {\n      removeFromCart(el);\n      removeFromSelected(el);\n    });\n  }; // Payment function\n\n\n  var handleCardInput = function handleCardInput(evt) {\n    if (evt.target.name === \"cardNum\") {\n      evt.target.value = formatCreditCardNumber(evt.target.value);\n      setCheckoutInput(evt);\n    } else if (evt.target.name === \"expiry\") {\n      evt.target.value = formatExpirationDate(evt.target.value);\n      setCheckoutInput(evt);\n    } else if (evt.target.name === \"cvc\") {\n      evt.target.value = formatCVC(evt.target.value);\n      setCheckoutInput(evt);\n    }\n  }; // Place Order\n\n\n  var handleSubmit = function handleSubmit(evt) {\n    evt.preventDefault();\n    var country = checkoutInput.country,\n        city = checkoutInput.city,\n        zipcode = checkoutInput.zipcode,\n        address = checkoutInput.address,\n        name = checkoutInput.name,\n        companyName = checkoutInput.companyName,\n        phone = checkoutInput.phone,\n        email = checkoutInput.email,\n        cardNum = checkoutInput.cardNum,\n        items = checkoutInput.items; // axios\n    //     .post(\"/checkout\", {\n    //         country,\n    //         city,\n    //         zipcode,\n    //         address,\n    //         name,\n    //         companyName,\n    //         phone,\n    //         email,\n    //         cardNum,\n    //         items\n    //     })\n    //     .then(res => {\n    //         console.log(\"Order is sent!: \" + res.status);\n    //     })\n    //     .catch(err => {\n    //         console.log(err, \"Can't submit order!\");\n    //     });\n\n    alert(\"\".concat(country, \",\\n            \").concat(city, \",\\n            \").concat(zipcode, \",\\n            \").concat(address, \",\\n            \").concat(name, \",\\n            \").concat(companyName, \",\\n            \").concat(phone, \",\\n            \").concat(email, \",\\n            \").concat(cardNum, \",\\n            \").concat(items));\n    handleNext();\n  };\n\n  var getStepContent = function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return React.createElement(CheckoutCart, {\n          selected: selected,\n          handleSelectAllClick: handleSelectAllClick,\n          handleClick: handleClick,\n          handleRemove: handleRemove\n        });\n\n      case 1:\n        return React.createElement(Billing, {\n          checkoutInput: checkoutInput,\n          setCheckoutInput: setCheckoutInput\n        });\n\n      case 2:\n        return React.createElement(Payment, {\n          checkoutInput: checkoutInput,\n          setCheckoutInput: setCheckoutInput,\n          handleCardInput: handleCardInput\n        });\n\n      case 3:\n        return React.createElement(React.Fragment, null, React.createElement(Typography, {\n          variant: \"h5\"\n        }, \"Confirm Order\"), React.createElement(Confirm, {\n          checkoutInput: checkoutInput,\n          selected: selected\n        }));\n\n      default:\n        return \"Unknown step\";\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Container, null, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\"\n  }, \"Checkout\"), React.createElement(Stepper, {\n    activeStep: activeStep\n  }, steps.map(function (label, index) {\n    return React.createElement(Step, {\n      key: index\n    }, React.createElement(StepLabel, {\n      StepIconProps: {\n        classes: {\n          completed: classes.icon,\n          active: classes.icon\n        }\n      }\n    }, label));\n  })), React.createElement(Paper, {\n    elevation: 0,\n    className: classes.paper\n  }, activeStep === steps.length ? React.createElement(React.Fragment, null, React.createElement(Confirm, {\n    checkoutInput: checkoutInput,\n    selected: selected\n  }), React.createElement(\"div\", null, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleReset,\n    className: classes.btnReset\n  }, \"Reset\"))) : React.createElement(React.Fragment, null, getStepContent(activeStep), React.createElement(\"div\", null, activeStep === steps.length - 1 ? React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.btnNext,\n    onClick: handleSubmit\n  }, \"Place Order\") : React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleNext,\n    className: classes.btnNext\n  }, \"Next\"), React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.btnBack\n  }, \"Back\"))))));\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/pages/checkout.js"],"names":["React","useState","useContext","makeStyles","Container","Paper","Stepper","Step","StepLabel","Button","Typography","CheckoutCart","Billing","Payment","Confirm","CheckoutStyles","ShopContext","useInputState","formatCreditCardNumber","formatCVC","formatExpirationDate","axios","useStyles","initCheckout","country","city","zipcode","address","name","companyName","phone","email","cardType","cardNum","cardName","cvc","expiry","items","steps","Checkout","classes","cart","totalItems","totalAmounts","removeFromCart","activeStep","setActiveStep","length","map","el","id","selected","setSelected","checkoutInput","setCheckoutInput","handleNext","prevActiveStep","handleBack","handleReset","handleSelectAllClick","event","target","checked","handleClick","selectedIndex","indexOf","newSelected","concat","slice","console","log","removeFromSelected","index","findIndex","splice","handleRemove","handleRemoveBundle","idArr","forEach","handleCardInput","evt","value","handleSubmit","preventDefault","alert","getStepContent","step","title","label","completed","icon","active","paper","btnReset","btnNext","btnBack"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckoutCart from \"../components/checkout/CheckoutCart\";\nimport Billing from \"../components/checkout/Billing\";\nimport Payment from \"../components/checkout/Payment\";\nimport Confirm from \"../components/checkout/Confirm\";\nimport CheckoutStyles from \"../styles/CheckoutStyles\";\nimport { ShopContext } from \"../contexts/ShopContext\";\nimport useInputState from \"../hooks/useInputState\";\nimport {\n    formatCreditCardNumber,\n    formatCVC,\n    formatExpirationDate\n} from \"../components/checkout/CardFormat\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(CheckoutStyles);\n\nconst initCheckout = {\n    country: \"\",\n    city: \"\",\n    zipcode: \"\",\n    address: \"\",\n    name: \"\",\n    companyName: \"\",\n    phone: \"\",\n    email: \"\",\n    cardType: \"\",\n    cardNum: \"\",\n    cardName: \"\",\n    cvc: \"\",\n    expiry: \"\",\n    items: []\n};\n\nconst steps = [\n    \"Shopping Cart\",\n    \"Billing & Shipping Method\",\n    \"Payment Method\",\n    \"Confirm Order\"\n];\n\nconst Checkout = () => {\n    const classes = useStyles();\n\n    const { cart, totalItems, totalAmounts, removeFromCart } = useContext(\n        ShopContext\n    );\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [selected, setSelected] = useState(\n        cart.length > 0 ? cart.map(el => el.id) : []\n    );\n    const [checkoutInput, setCheckoutInput] = useInputState(initCheckout);\n\n    // Stepper function\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    //CheckoutCart function\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            setSelected(cart.map(el => el.id));\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n        console.log(selected);\n    };\n\n    const removeFromSelected = id => {\n        let index = selected.findIndex(el => el == id);\n        selected.splice(index, 1);\n        setSelected(selected);\n    };\n\n    const handleRemove = id => {\n        removeFromCart(id);\n        removeFromSelected(id);\n    };\n\n    const handleRemoveBundle = idArr => {\n        idArr.forEach(el => {\n            removeFromCart(el);\n            removeFromSelected(el);\n        });\n    };\n\n    // Payment function\n    const handleCardInput = evt => {\n        if (evt.target.name === \"cardNum\") {\n            evt.target.value = formatCreditCardNumber(evt.target.value);\n            setCheckoutInput(evt);\n        } else if (evt.target.name === \"expiry\") {\n            evt.target.value = formatExpirationDate(evt.target.value);\n            setCheckoutInput(evt);\n        } else if (evt.target.name === \"cvc\") {\n            evt.target.value = formatCVC(evt.target.value);\n            setCheckoutInput(evt);\n        }\n    };\n\n    // Place Order\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        const {\n            country,\n            city,\n            zipcode,\n            address,\n            name,\n            companyName,\n            phone,\n            email,\n            cardNum,\n            items\n        } = checkoutInput;\n        // axios\n        //     .post(\"/checkout\", {\n        //         country,\n        //         city,\n        //         zipcode,\n        //         address,\n        //         name,\n        //         companyName,\n        //         phone,\n        //         email,\n        //         cardNum,\n        //         items\n        //     })\n        //     .then(res => {\n        //         console.log(\"Order is sent!: \" + res.status);\n        //     })\n        //     .catch(err => {\n        //         console.log(err, \"Can't submit order!\");\n        //     });\n        alert(\n            `${country},\n            ${city},\n            ${zipcode},\n            ${address},\n            ${name},\n            ${companyName},\n            ${phone},\n            ${email},\n            ${cardNum},\n            ${items}`\n        );\n        handleNext();\n    };\n\n    const getStepContent = step => {\n        switch (step) {\n            case 0:\n                return (\n                    <CheckoutCart\n                        selected={selected}\n                        handleSelectAllClick={handleSelectAllClick}\n                        handleClick={handleClick}\n                        handleRemove={handleRemove}\n                    />\n                );\n            case 1:\n                return (\n                    <Billing\n                        checkoutInput={checkoutInput}\n                        setCheckoutInput={setCheckoutInput}\n                    />\n                );\n            case 2:\n                return (\n                    <Payment\n                        checkoutInput={checkoutInput}\n                        setCheckoutInput={setCheckoutInput}\n                        handleCardInput={handleCardInput}\n                    />\n                );\n            case 3:\n                return (\n                    <React.Fragment>\n                        <Typography variant=\"h5\">Confirm Order</Typography>\n                        <Confirm\n                            checkoutInput={checkoutInput}\n                            selected={selected}\n                        />\n                    </React.Fragment>\n                );\n            default:\n                return \"Unknown step\";\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Container>\n                <Typography className={classes.title} variant=\"h5\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => (\n                        <Step key={index}>\n                            <StepLabel\n                                StepIconProps={{\n                                    classes: {\n                                        completed: classes.icon,\n                                        active: classes.icon\n                                    }\n                                }}\n                            >\n                                {label}\n                            </StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <Paper elevation={0} className={classes.paper}>\n                    {activeStep === steps.length ? (\n                        <React.Fragment>\n                            <Confirm\n                                checkoutInput={checkoutInput}\n                                selected={selected}\n                            />\n                            <div>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={handleReset}\n                                    className={classes.btnReset}\n                                >\n                                    Reset\n                                </Button>\n                            </div>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            {getStepContent(activeStep)}\n                            <div>\n                                {activeStep === steps.length - 1 ? (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        className={classes.btnNext}\n                                        onClick={handleSubmit}\n                                    >\n                                        Place Order\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={handleNext}\n                                        className={classes.btnNext}\n                                    >\n                                        Next\n                                    </Button>\n                                )}\n\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.btnBack}\n                                >\n                                    Back\n                                </Button>\n                            </div>\n                        </React.Fragment>\n                    )}\n                </Paper>\n            </Container>\n        </React.Fragment>\n    );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}