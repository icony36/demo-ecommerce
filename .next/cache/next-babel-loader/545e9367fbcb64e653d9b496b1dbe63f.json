{"ast":null,"code":"import React from \"react\";\nimport { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(6)\n  },\n  item: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  img: {\n    width: \"40%\",\n    verticalAlign: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\"\n    }\n  },\n  name: {\n    marginLeft: theme.spacing(4),\n    cursor: \"pointer\"\n  },\n  numberCell: {\n    width: \"20%\"\n  },\n  total: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    textAlign: \"right\"\n  },\n  totalWord: {\n    fontWeight: 500,\n    color: \"#C52C57\"\n  },\n  subtotal: {\n    color: \"#C52C57\"\n  }\n});\n\nconst useStyles = makeStyles(styles);\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\nconst shippingFee = 0;\n\nconst Confirm = props => {\n  const classes = useStyles();\n  const {\n    cart,\n    totalItems,\n    totalAmounts\n  } = useContext(ShopContext);\n  return React.createElement(Paper, {\n    elevation: 0,\n    className: classes.paper\n  }, React.createElement(Typography, {\n    variant: \"h5\"\n  }, \"Confirm Checkout?\"), React.createElement(Card, {\n    className: classes.card,\n    elevation: 0\n  }, React.createElement(CardContent, null, React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\"\n  }, \"Billing Address\"))), React.createElement(Table, {\n    className: classes.table\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, null, \"Items\"), tableHead.map((el, i) => React.createElement(TableCell, {\n    key: i,\n    align: \"right\"\n  }, el)))), React.createElement(TableBody, null, cart.map((el, i) => React.createElement(TableRow, {\n    key: i\n  }, React.createElement(TableCell, {\n    className: classes.itemCell,\n    component: \"th\",\n    scope: \"row\"\n  }, React.createElement(\"div\", {\n    className: classes.item\n  }, React.createElement(\"img\", {\n    className: classes.img,\n    src: el.imgSrc\n  }), React.createElement(Typography, {\n    className: classes.name\n  }, el.name))), React.createElement(TableCell, {\n    align: \"right\",\n    className: classes.numberCell\n  }, \"$ \", el.price), React.createElement(TableCell, {\n    align: \"right\",\n    className: classes.numberCell\n  }, el.quantity), React.createElement(TableCell, {\n    align: \"right\",\n    className: classes.numberCell\n  }, \"$ \", el.price * el.quantity))))), React.createElement(\"div\", {\n    className: classes.total\n  }, React.createElement(Typography, {\n    className: classes.subtotal\n  }, \"Subtotal: $ \", totalAmounts), React.createElement(Typography, {\n    className: classes.subtotal\n  }, \"Shipping Fee: $ \", shippingFee), React.createElement(Typography, {\n    className: classes.totalWord\n  }, \"TOTAL PAID: $ \", totalAmounts + shippingFee)));\n};\n\nexport default Confirm;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/components/checkout/Confirm.js"],"names":["useContext","makeStyles","Card","CardActions","CardContent","Table","TableBody","TableCell","TableHead","TableRow","Paper","Typography","ShopContext","styles","theme","paper","padding","spacing","marginBottom","item","display","alignItems","img","width","verticalAlign","breakpoints","down","name","marginLeft","cursor","numberCell","total","marginTop","textAlign","totalWord","fontWeight","color","subtotal","useStyles","tableHead","shippingFee","Confirm","props","classes","cart","totalItems","totalAmounts","card","table","map","el","i","itemCell","imgSrc","price","quantity"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(6)\n    },\n    item: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    img: {\n        width: \"40%\",\n        verticalAlign: \"center\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        }\n    },\n    name: {\n        marginLeft: theme.spacing(4),\n        cursor: \"pointer\"\n    },\n    numberCell: {\n        width: \"20%\"\n    },\n    total: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        textAlign: \"right\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\"\n    },\n    subtotal: {\n        color: \"#C52C57\"\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\n\nconst shippingFee = 0;\n\nconst Confirm = props => {\n    const classes = useStyles();\n\n    const { cart, totalItems, totalAmounts } = useContext(ShopContext);\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Typography variant=\"h5\">Confirm Checkout?</Typography>\n\n            <Card className={classes.card} elevation={0}>\n                <CardContent>\n                    <Typography variant=\"h6\" component=\"h2\">\n                        Billing Address\n                    </Typography>\n                </CardContent>\n            </Card>\n\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Items</TableCell>\n                        {tableHead.map((el, i) => (\n                            <TableCell key={i} align=\"right\">\n                                {el}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {cart.map((el, i) => (\n                        <TableRow key={i}>\n                            <TableCell\n                                className={classes.itemCell}\n                                component=\"th\"\n                                scope=\"row\"\n                            >\n                                <div className={classes.item}>\n                                    <img\n                                        className={classes.img}\n                                        src={el.imgSrc}\n                                    />\n\n                                    <Typography className={classes.name}>\n                                        {el.name}\n                                    </Typography>\n                                </div>\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                {el.quantity}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price * el.quantity}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n\n            <div className={classes.total}>\n                <Typography className={classes.subtotal}>\n                    Subtotal: $ {totalAmounts}\n                </Typography>\n                <Typography className={classes.subtotal}>\n                    Shipping Fee: $ {shippingFee}\n                </Typography>\n                <Typography className={classes.totalWord}>\n                    TOTAL PAID: $ {totalAmounts + shippingFee}\n                </Typography>\n            </div>\n        </Paper>\n    );\n};\n\nexport default Confirm;\n"]},"metadata":{},"sourceType":"module"}