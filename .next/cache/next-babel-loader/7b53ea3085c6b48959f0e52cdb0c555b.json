{"ast":null,"code":"import React from \"react\";\nimport { useContext } from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(6)\n  },\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  },\n  item: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  img: {\n    width: \"40%\",\n    verticalAlign: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\"\n    }\n  },\n  name: {\n    marginLeft: theme.spacing(4),\n    cursor: \"pointer\"\n  },\n  numberCell: {\n    width: \"20%\"\n  },\n  cardArea: {\n    marginTop: theme.spacing(2)\n  },\n  total: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    textAlign: \"right\"\n  },\n  totalWord: {\n    fontWeight: 500,\n    color: \"#C52C57\"\n  },\n  subtotal: {\n    color: \"#C52C57\"\n  }\n});\n\nconst useStyles = makeStyles(styles);\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\nconst shippingFee = 0;\n\nconst Confirm = props => {\n  const classes = useStyles();\n  const {\n    cart,\n    totalAmounts\n  } = useContext(ShopContext);\n  const {\n    checkoutInput,\n    isPaid,\n    handleReset,\n    selectedItems,\n    sumSelectedAmounts\n  } = props;\n  const subTotal = sumSelectedAmounts();\n  return React.createElement(Paper, {\n    elevation: 0,\n    className: classes.paper\n  }, isPaid ? React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\"\n  }, \"Thank you for your order! Your invoice has been sent to your email, please check it.\")) : React.createElement(Typography, {\n    variant: \"h5\"\n  }, \"Confirm Order\"), React.createElement(Table, {\n    className: classes.table\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, null, \"Items\"), tableHead.map((el, i) => React.createElement(TableCell, {\n    key: i,\n    align: \"right\"\n  }, el)))), React.createElement(TableBody, null, selectedItems.map((el, i) => React.createElement(TableRow, {\n    key: i\n  }, React.createElement(TableCell, {\n    className: classes.itemCell,\n    component: \"th\",\n    scope: \"row\"\n  }, React.createElement(\"div\", {\n    className: classes.item\n  }, React.createElement(\"img\", {\n    className: classes.img,\n    src: el.imgSrc\n  }), React.createElement(Typography, {\n    className: classes.name\n  }, el.name))), React.createElement(TableCell, {\n    align: \"right\",\n    className: classes.numberCell\n  }, \"$ \", el.price), React.createElement(TableCell, {\n    align: \"right\",\n    className: classes.numberCell\n  }, el.quantity), React.createElement(TableCell, {\n    align: \"right\",\n    className: classes.numberCell\n  }, \"$ \", el.price * el.quantity))))), React.createElement(\"div\", {\n    className: classes.cardArea\n  }, React.createElement(Card, {\n    className: classes.card,\n    elevation: 0\n  }, React.createElement(CardContent, null, React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\"\n  }, \"ShippingAddress\"), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.name), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.address), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.zipcode), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.city), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, checkoutInput.country))), React.createElement(Card, {\n    className: classes.card,\n    elevation: 0\n  }, React.createElement(CardContent, null, React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\"\n  }, \"Payment Info\"), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, \"Name on card: \", checkoutInput.cardName), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, \"Card type: \", checkoutInput.cardType), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\"\n  }, \"Card number (last four digit):\", \" \", checkoutInput.cardNum.toString().substr(-4))))), React.createElement(\"div\", {\n    className: classes.total\n  }, React.createElement(Typography, {\n    className: classes.subtotal\n  }, \"Subtotal: $ \", subTotal), React.createElement(Typography, {\n    className: classes.subtotal\n  }, \"Shipping Fee: $ \", shippingFee), React.createElement(Typography, {\n    className: classes.totalWord\n  }, isPaid ? \"TOTAL PAID\" : \"TOTAL\", \": $\", \" \", subTotal + shippingFee)), isPaid ? React.createElement(Button, {\n    onClick: handleReset\n  }, \"Reset\") : null);\n};\n\nexport default Confirm;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/components/checkout/Confirm.js"],"names":["useContext","makeStyles","lighten","Toolbar","Card","CardContent","Table","TableBody","TableCell","TableHead","TableRow","Paper","Typography","Button","ShopContext","styles","theme","paper","padding","spacing","marginBottom","toolbar","paddingLeft","paddingRight","color","palette","secondary","main","backgroundColor","light","item","display","alignItems","img","width","verticalAlign","breakpoints","down","name","marginLeft","cursor","numberCell","cardArea","marginTop","total","textAlign","totalWord","fontWeight","subtotal","useStyles","tableHead","shippingFee","Confirm","props","classes","cart","totalAmounts","checkoutInput","isPaid","handleReset","selectedItems","sumSelectedAmounts","subTotal","table","map","el","i","itemCell","imgSrc","price","quantity","card","address","zipcode","city","country","cardName","cardType","cardNum","toString","substr"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport { makeStyles, lighten } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(6)\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    },\n    item: {\n        display: \"flex\",\n        alignItems: \"center\"\n    },\n    img: {\n        width: \"40%\",\n        verticalAlign: \"center\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        }\n    },\n    name: {\n        marginLeft: theme.spacing(4),\n        cursor: \"pointer\"\n    },\n    numberCell: {\n        width: \"20%\"\n    },\n    cardArea: {\n        marginTop: theme.spacing(2)\n    },\n    total: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(1),\n        textAlign: \"right\"\n    },\n    totalWord: {\n        fontWeight: 500,\n        color: \"#C52C57\"\n    },\n    subtotal: {\n        color: \"#C52C57\"\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\n\nconst shippingFee = 0;\n\nconst Confirm = props => {\n    const classes = useStyles();\n\n    const { cart, totalAmounts } = useContext(ShopContext);\n\n    const {\n        checkoutInput,\n        isPaid,\n        handleReset,\n        selectedItems,\n        sumSelectedAmounts\n    } = props;\n\n    const subTotal = sumSelectedAmounts();\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            {isPaid ? (\n                <Toolbar className={classes.toolbar}>\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\n                        Thank you for your order! Your invoice has been sent to\n                        your email, please check it.\n                    </Typography>\n                </Toolbar>\n            ) : (\n                <Typography variant=\"h5\">Confirm Order</Typography>\n            )}\n\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Items</TableCell>\n                        {tableHead.map((el, i) => (\n                            <TableCell key={i} align=\"right\">\n                                {el}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {selectedItems.map((el, i) => (\n                        <TableRow key={i}>\n                            <TableCell\n                                className={classes.itemCell}\n                                component=\"th\"\n                                scope=\"row\"\n                            >\n                                <div className={classes.item}>\n                                    <img\n                                        className={classes.img}\n                                        src={el.imgSrc}\n                                    />\n\n                                    <Typography className={classes.name}>\n                                        {el.name}\n                                    </Typography>\n                                </div>\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                {el.quantity}\n                            </TableCell>\n                            <TableCell\n                                align=\"right\"\n                                className={classes.numberCell}\n                            >\n                                $ {el.price * el.quantity}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n\n            <div className={classes.cardArea}>\n                <Card className={classes.card} elevation={0}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            ShippingAddress\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.name}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.address}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.zipcode}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.city}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            {checkoutInput.country}\n                        </Typography>\n                    </CardContent>\n                </Card>\n\n                <Card className={classes.card} elevation={0}>\n                    <CardContent>\n                        <Typography variant=\"h6\" component=\"h2\">\n                            Payment Info\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Name on card: {checkoutInput.cardName}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Card type: {checkoutInput.cardType}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Card number (last four digit):{\" \"}\n                            {checkoutInput.cardNum.toString().substr(-4)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n\n            <div className={classes.total}>\n                <Typography className={classes.subtotal}>\n                    Subtotal: $ {subTotal}\n                </Typography>\n                <Typography className={classes.subtotal}>\n                    Shipping Fee: $ {shippingFee}\n                </Typography>\n                <Typography className={classes.totalWord}>\n                    {isPaid ? \"TOTAL PAID\" : \"TOTAL\"}: ${\" \"}\n                    {subTotal + shippingFee}\n                </Typography>\n            </div>\n            {isPaid ? <Button onClick={handleReset}>Reset</Button> : null}\n        </Paper>\n    );\n};\n\nexport default Confirm;\n"]},"metadata":{},"sourceType":"module"}