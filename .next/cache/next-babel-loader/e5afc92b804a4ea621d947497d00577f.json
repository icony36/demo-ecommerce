{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Link from \"next/link\";\nimport ItemStyles from \"../../../styles/ItemStyles\";\nimport { ShopContext } from \"../../../contexts/ShopContext\";\nvar useStyles = makeStyles(ItemStyles);\nvar stockLeft = 50;\n\nvar Item = function Item(_ref) {\n  var id = _ref.id;\n  var classes = useStyles();\n\n  var _useContext = useContext(ShopContext),\n      items = _useContext.items,\n      quantity = _useContext.quantity,\n      addToCart = _useContext.addToCart,\n      updateQuantity = _useContext.updateQuantity;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isQtyValid = _useState2[0],\n      setIsQtyValid = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAdded = _useState4[0],\n      setIsAdded = _useState4[1];\n\n  var item = items.filter(function (el) {\n    return el.id === Number(id);\n  })[0];\n\n  var handleAddToCart = function handleAddToCart(imgSrc, name, id, price, quantity) {\n    if (quantity > 0) {\n      setIsQtyValid(true);\n      addToCart({\n        imgSrc: imgSrc,\n        name: name,\n        id: id,\n        price: price,\n        quantity: quantity\n      });\n      setIsAdded(true);\n    } else {\n      setIsQtyValid(false);\n    }\n  };\n\n  var handleInc = function handleInc(evt) {\n    evt.preventDefault();\n\n    if (quantity >= 0 && quantity < stockLeft) {\n      updateQuantity(quantity + 1);\n    }\n  };\n\n  var handleDec = function handleDec(evt) {\n    evt.preventDefault();\n\n    if (quantity > 1 && quantity <= stockLeft) {\n      updateQuantity(quantity - 1);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(evt) {\n    if (Number(evt.target.value) > stockLeft) {\n      updateQuantity(stockLeft);\n    } else {\n      updateQuantity(Number(evt.target.value));\n    }\n  };\n\n  var checkQuantity = function checkQuantity() {\n    if (quantity && quantity > 0) {\n      return quantity;\n    } else {\n      return \"\";\n    }\n  };\n\n  var handleIsAddedClose = function handleIsAddedClose() {\n    setIsAdded(false);\n  };\n\n  var renderIsAdded = React.createElement(\"div\", null, React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    open: isAdded,\n    onClose: handleIsAddedClose,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    autoHideDuration: 2000\n  }, React.createElement(SnackbarContent, {\n    className: classes.snackBar,\n    message: React.createElement(\"span\", {\n      id: \"message-id\"\n    }, \"Added to cart!\"),\n    action: React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleIsAddedClose\n    }, React.createElement(CloseIcon, null))\n  })));\n  return React.createElement(Container, {\n    maxWidth: \"md\"\n  }, React.createElement(Card, {\n    className: classes.card\n  }, React.createElement(\"div\", {\n    className: classes.mediaArea\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: item.imgSrc,\n    title: item.name,\n    component: \"img\"\n  })), React.createElement(\"div\", {\n    className: classes.details\n  }, React.createElement(CardContent, {\n    className: classes.content\n  }, React.createElement(\"div\", {\n    className: classes.nameArea\n  }, React.createElement(Typography, {\n    className: classes.name,\n    variant: \"h3\"\n  }, item.name), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.desc\n  }, item.desc)), React.createElement(\"div\", {\n    className: classes.priceArea\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.price\n  }, \"$ \".concat(item.price)))), React.createElement(\"div\", {\n    className: classes.quantityArea\n  }, React.createElement(TextField, {\n    id: \"item-quantity\",\n    label: \"Quantity\",\n    value: checkQuantity(),\n    type: \"number\",\n    className: classes.quantity,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      className: classes.input\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    onChange: handleInputChange\n  }), React.createElement(\"div\", {\n    className: classes.incrementer\n  }, React.createElement(IconButton, {\n    className: classes.incBtn,\n    \"aria-label\": \"add quantity\",\n    onClick: handleInc\n  }, React.createElement(AddIcon, {\n    fontSize: \"small\"\n  })), React.createElement(IconButton, {\n    className: classes.incBtn,\n    \"aria-label\": \"reduce quantity\",\n    onClick: handleDec\n  }, React.createElement(RemoveIcon, {\n    fontSize: \"small\"\n  })))), !isQtyValid && React.createElement(Typography, {\n    color: \"error\",\n    variant: \"overline\",\n    component: \"p\"\n  }, \"Please enter valid number\"), React.createElement(\"div\", {\n    className: classes.controlArea\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.cartBtn,\n    onClick: function onClick() {\n      handleAddToCart(item.imgSrc, item.name, item.id, item.price, quantity);\n    }\n  }, \"Add To Cart\"), React.createElement(Link, {\n    href: \"/checkout\"\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    className: classes.buyBtn,\n    onClick: function onClick() {\n      handleAddToCart(item.imgSrc, item.name, item.id, item.price, quantity);\n    }\n  }, \"Buy Now\"))))), renderIsAdded);\n};\n\nItem.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return query;\n};\n\nexport default Item;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/pages/shop/[id]/index.js"],"names":["useContext","useState","useEffect","makeStyles","Container","Typography","Card","CardMedia","CardContent","Button","TextField","IconButton","AddIcon","RemoveIcon","CloseIcon","Snackbar","SnackbarContent","Link","ItemStyles","ShopContext","useStyles","stockLeft","Item","id","classes","items","quantity","addToCart","updateQuantity","isQtyValid","setIsQtyValid","isAdded","setIsAdded","item","filter","el","Number","handleAddToCart","imgSrc","name","price","handleInc","evt","preventDefault","handleDec","handleInputChange","target","value","checkQuantity","handleIsAddedClose","renderIsAdded","vertical","horizontal","snackBar","card","mediaArea","media","details","content","nameArea","desc","priceArea","quantityArea","shrink","className","input","incrementer","incBtn","controlArea","cartBtn","buyBtn","getInitialProps","query"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Link from \"next/link\";\nimport ItemStyles from \"../../../styles/ItemStyles\";\nimport { ShopContext } from \"../../../contexts/ShopContext\";\n\nconst useStyles = makeStyles(ItemStyles);\nconst stockLeft = 50;\n\nconst Item = ({ id }) => {\n    const classes = useStyles();\n    const { items, quantity, addToCart, updateQuantity } = useContext(\n        ShopContext\n    );\n    const [isQtyValid, setIsQtyValid] = useState(true);\n    const [isAdded, setIsAdded] = useState(false);\n\n    const item = items.filter(el => el.id === Number(id))[0];\n\n    const handleAddToCart = (imgSrc, name, id, price, quantity) => {\n        if (quantity > 0) {\n            setIsQtyValid(true);\n            addToCart({ imgSrc, name, id, price, quantity });\n            setIsAdded(true);\n        } else {\n            setIsQtyValid(false);\n        }\n    };\n\n    const handleInc = evt => {\n        evt.preventDefault();\n        if (quantity >= 0 && quantity < stockLeft) {\n            updateQuantity(quantity + 1);\n        }\n    };\n\n    const handleDec = evt => {\n        evt.preventDefault();\n        if (quantity > 1 && quantity <= stockLeft) {\n            updateQuantity(quantity - 1);\n        }\n    };\n\n    const handleInputChange = evt => {\n        if (Number(evt.target.value) > stockLeft) {\n            updateQuantity(stockLeft);\n        } else {\n            updateQuantity(Number(evt.target.value));\n        }\n    };\n\n    const checkQuantity = () => {\n        if (quantity && quantity > 0) {\n            return quantity;\n        } else {\n            return \"\";\n        }\n    };\n\n    const handleIsAddedClose = () => {\n        setIsAdded(false);\n    };\n\n    const renderIsAdded = (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                }}\n                open={isAdded}\n                onClose={handleIsAddedClose}\n                ContentProps={{\n                    \"aria-describedby\": \"message-id\"\n                }}\n                autoHideDuration={2000}\n            >\n                <SnackbarContent\n                    className={classes.snackBar}\n                    message={<span id=\"message-id\">Added to cart!</span>}\n                    action={\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={handleIsAddedClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    }\n                />\n            </Snackbar>\n        </div>\n    );\n\n    return (\n        <Container maxWidth=\"md\">\n            <Card className={classes.card}>\n                <div className={classes.mediaArea}>\n                    <CardMedia\n                        className={classes.media}\n                        image={item.imgSrc}\n                        title={item.name}\n                        component=\"img\"\n                    />\n                </div>\n                <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <div className={classes.nameArea}>\n                            <Typography className={classes.name} variant=\"h3\">\n                                {item.name}\n                            </Typography>\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                                className={classes.desc}\n                            >\n                                {item.desc}\n                            </Typography>\n                        </div>\n                        <div className={classes.priceArea}>\n                            <Typography\n                                variant=\"h6\"\n                                className={classes.price}\n                            >{`$ ${item.price}`}</Typography>\n                        </div>\n                    </CardContent>\n                    <div className={classes.quantityArea}>\n                        <TextField\n                            id=\"item-quantity\"\n                            label=\"Quantity\"\n                            value={checkQuantity()}\n                            type=\"number\"\n                            className={classes.quantity}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            inputProps={{\n                                className: classes.input\n                            }}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={handleInputChange}\n                        />\n                        <div className={classes.incrementer}>\n                            <IconButton\n                                className={classes.incBtn}\n                                aria-label=\"add quantity\"\n                                onClick={handleInc}\n                            >\n                                <AddIcon fontSize=\"small\" />\n                            </IconButton>\n                            <IconButton\n                                className={classes.incBtn}\n                                aria-label=\"reduce quantity\"\n                                onClick={handleDec}\n                            >\n                                <RemoveIcon fontSize=\"small\" />\n                            </IconButton>\n                        </div>\n                    </div>\n\n                    {!isQtyValid && (\n                        <Typography\n                            color=\"error\"\n                            variant=\"overline\"\n                            component=\"p\"\n                        >\n                            Please enter valid number\n                        </Typography>\n                    )}\n\n                    <div className={classes.controlArea}>\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.cartBtn}\n                            onClick={() => {\n                                handleAddToCart(\n                                    item.imgSrc,\n                                    item.name,\n                                    item.id,\n                                    item.price,\n                                    quantity\n                                );\n                            }}\n                        >\n                            Add To Cart\n                        </Button>\n                        <Link href=\"/checkout\">\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                className={classes.buyBtn}\n                                onClick={() => {\n                                    handleAddToCart(\n                                        item.imgSrc,\n                                        item.name,\n                                        item.id,\n                                        item.price,\n                                        quantity\n                                    );\n                                }}\n                            >\n                                Buy Now\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n            </Card>\n            {renderIsAdded}\n        </Container>\n    );\n};\n\nItem.getInitialProps = ({ query }) => {\n    return query;\n};\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}