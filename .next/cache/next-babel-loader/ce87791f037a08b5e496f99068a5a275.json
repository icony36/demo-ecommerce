{"ast":null,"code":"import React from \"react\";\nimport { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(6)\n  }\n});\n\nconst useStyles = makeStyles(styles);\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\n\nconst Confirm = () => {\n  const classes = useStyles();\n  const {\n    cart,\n    totalItems,\n    totalAmounts\n  } = useContext(ShopContext);\n  return React.createElement(Paper, {\n    elevation: 0,\n    className: classes.paper\n  }, React.createElement(Typography, {\n    variant: \"h5\"\n  }, \"Confirm Checkout?\"), React.createElement(Table, {\n    className: classes.table\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, null, \"Items\"), \"tableHead.map(el=>(\", React.createElement(TableCell, {\n    align: \"right\"\n  }, el), \"))\")), cart.map((el, i) => React.createElement(\"div\", {\n    key: i\n  }, React.createElement(\"img\", {\n    className: classes.img,\n    src: el.imgSrc\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.word\n  }, el.name), React.createElement(Typography, {\n    variant: \"body1\",\n    className: classes.price\n  }, \"$ \", el.price), React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.qty\n  }, \"Qty: \", el.quantity)))));\n};\n\nexport default Confirm;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/components/checkout/Confirm.js"],"names":["useContext","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Typography","ShopContext","styles","theme","paper","padding","spacing","marginBottom","useStyles","tableHead","Confirm","classes","cart","totalItems","totalAmounts","table","el","map","i","img","imgSrc","word","name","price","qty","quantity"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFX;AADc,CAAL,CAApB;;AAOA,MAAME,SAAS,GAAGf,UAAU,CAACS,MAAD,CAA5B;AAEA,MAAMO,SAAS,GAAG,CAAC,YAAD,EAAe,UAAf,EAA2B,aAA3B,CAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,MAAqCtB,UAAU,CAACS,WAAD,CAArD;AAEA,SACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,SAAS,EAAEU,OAAO,CAACP;AAAxC,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,yBADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEO,OAAO,CAACI;AAA1B,KACI,oBAAC,SAAD,QACI,oBAAC,QAAD,QACI,oBAAC,SAAD,gBADJ,yBAGI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,KAA0BC,EAA1B,CAHJ,OADJ,CADJ,EASKJ,IAAI,CAACK,GAAL,CAAS,CAACD,EAAD,EAAKE,CAAL,KACN;AAAK,IAAA,GAAG,EAAEA;AAAV,KACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACQ,GAAxB;AAA6B,IAAA,GAAG,EAAEH,EAAE,CAACI;AAArC,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAET,OAAO,CAACU;AAA5C,KACKL,EAAE,CAACM,IADR,CAFJ,EAKI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAEX,OAAO,CAACY;AAA/C,WACOP,EAAE,CAACO,KADV,CALJ,EAQI,oBAAC,UAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,eAFV;AAGI,IAAA,SAAS,EAAEZ,OAAO,CAACa;AAHvB,cAKUR,EAAE,CAACS,QALb,CARJ,CADH,CATL,CAFJ,CADJ;AAiCH,CAtCD;;AAwCA,eAAef,OAAf","sourcesContent":["import { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ShopContext } from \"../../contexts/ShopContext\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(6)\n    }\n});\n\nconst useStyles = makeStyles(styles);\n\nconst tableHead = [\"Unit Price\", \"Quantity\", \"Total Price\"];\n\nconst Confirm = () => {\n    const classes = useStyles();\n\n    const { cart, totalItems, totalAmounts } = useContext(ShopContext);\n\n    return (\n        <Paper elevation={0} className={classes.paper}>\n            <Typography variant=\"h5\">Confirm Checkout?</Typography>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Items</TableCell>\n                        tableHead.map(el=>(\n                        <TableCell align=\"right\">{el}</TableCell>\n                        ))\n                    </TableRow>\n                </TableHead>\n                {cart.map((el, i) => (\n                    <div key={i}>\n                        <img className={classes.img} src={el.imgSrc}></img>\n                        <Typography variant=\"h6\" className={classes.word}>\n                            {el.name}\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.price}>\n                            $ {el.price}\n                        </Typography>\n                        <Typography\n                            variant=\"subtitle2\"\n                            color=\"textSecondary\"\n                            className={classes.qty}\n                        >\n                            Qty: {el.quantity}\n                        </Typography>\n                    </div>\n                ))}\n            </Table>\n        </Paper>\n    );\n};\n\nexport default Confirm;\n"]},"metadata":{},"sourceType":"module"}