{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport App, { Container } from \"next/app\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport { ShopProvider } from \"../contexts/ShopContext\";\nimport { BlogProvider } from \"../contexts/BlogContext\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    // Only uncomment this method if you have blocking data requirements for\n    // every single page in your application. This disables the ability to\n    // perform automatic static optimization, causing every page in your app to\n    // be server-side rendered.\n    //\n    // static async getInitialProps({ Component, ctx }) {\n    //     let pageProps = {};\n    //     if (Component.getInitialProps) {\n    //         pageProps = await Component.getInitialProps(ctx);\n    //     }\n    //     return { pageProps };\n    // }\n    value: function componentDidMount() {\n      // Remove the server-side injected CSS.\n      var jssStyles = document.querySelector(\"#jss-server-side\");\n\n      if (jssStyles) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return React.createElement(Container, null, React.createElement(CssBaseline, null), React.createElement(ShopProvider, null, React.createElement(BlogProvider, null, React.createElement(Navbar, null), React.createElement(Component, pageProps))), React.createElement(Footer, null));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/iantan/Desktop/Two-Halves-Sucre/source-code/pages/_app.js"],"names":["React","App","Container","Navbar","Footer","ShopProvider","BlogProvider","CssBaseline","MyApp","jssStyles","document","querySelector","parentNode","removeChild","props","Component","pageProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;IAEMC,K;;;;;;;;;;;;;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;wCAEoB;AAChB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,UAAIF,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACH;AACJ;;;6BAEQ;AAAA,wBAC4B,KAAKK,KADjC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAGL,aACI,oBAAC,SAAD,QACI,oBAAC,WAAD,OADJ,EAEI,oBAAC,YAAD,QACI,oBAAC,YAAD,QACI,oBAAC,MAAD,OADJ,EAEI,oBAAC,SAAD,EAAeA,SAAf,CAFJ,CADJ,CAFJ,EAQI,oBAAC,MAAD,OARJ,CADJ;AAYH;;;;EAvCef,G;;AA0CpB,eAAeO,KAAf","sourcesContent":["import React from \"react\";\nimport App, { Container } from \"next/app\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport { ShopProvider } from \"../contexts/ShopContext\";\nimport { BlogProvider } from \"../contexts/BlogContext\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nclass MyApp extends App {\n    // Only uncomment this method if you have blocking data requirements for\n    // every single page in your application. This disables the ability to\n    // perform automatic static optimization, causing every page in your app to\n    // be server-side rendered.\n    //\n    // static async getInitialProps({ Component, ctx }) {\n    //     let pageProps = {};\n\n    //     if (Component.getInitialProps) {\n    //         pageProps = await Component.getInitialProps(ctx);\n    //     }\n\n    //     return { pageProps };\n    // }\n\n    componentDidMount() {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector(\"#jss-server-side\");\n        if (jssStyles) {\n            jssStyles.parentNode.removeChild(jssStyles);\n        }\n    }\n\n    render() {\n        const { Component, pageProps } = this.props;\n\n        return (\n            <Container>\n                <CssBaseline />\n                <ShopProvider>\n                    <BlogProvider>\n                        <Navbar />\n                        <Component {...pageProps} />\n                    </BlogProvider>\n                </ShopProvider>\n                <Footer />\n            </Container>\n        );\n    }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}